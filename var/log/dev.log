[2022-07-26T13:08:12.530596+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerSmwwPEs/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-26T13:08:12.531877+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerSmwwPEs/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-26T13:08:12.532258+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-26T13:08:12.532358+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-26T23:36:47.904759+02:00] console.CRITICAL: Error thrown while running command "make". Message: "Command "make" is not defined.  Did you mean one of these?     make:auth     make:command     make:controller     make:crud     make:docker:database     make:entity     make:fixtures     make:form     make:functional-test     make:message     make:messenger-middleware     make:migration     make:registration-form     make:reset-password     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:test     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/console/Application.php:682)","command":"make","message":"Command \"make\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2022-07-26T23:36:55.872741+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-07-26T23:36:55.874169+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: could not find driver" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in the driver: could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:91)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 0): could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 0): could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)","command":"make:migration","message":"An exception occurred in the driver: could not find driver"} []
[2022-07-26T23:36:55.874312+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2022-07-26T23:38:19.689248+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:38:19.691253+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.692112+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.692643+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.703124+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:38:34.216473+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:38:34.217613+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:38:35.593660+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:35.596434+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INTEGER DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INTEGER DEFAULT NULL, PRIMARY KEY(version))"} []
[2022-07-26T23:38:35.606554+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.607027+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.607208+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.610765+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-26T23:38:35.618203+02:00] doctrine.DEBUG: Executing query: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json)         , password VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json)\n        , password VARCHAR(255) NOT NULL)"} []
[2022-07-26T23:38:35.618402+02:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) {"sql":"CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email)"} []
[2022-07-26T23:38:35.618820+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220726213819","2":"2022-07-26 23:38:35","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220726213819","2":"2022-07-26 23:38:35","3":8},"types":{"1":2,"2":2,"3":1}} []
[2022-07-26T23:38:35.618942+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-26T23:38:35.627368+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:48:07.276848+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-26T23:48:07.277320+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-26T23:48:07.277353+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-26T23:48:07.277367+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-26T23:48:49.513507+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.513666+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-26T23:48:49.513752+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-26T23:48:49.514034+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.514129+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.514397+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-26T23:48:49.514500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-26T23:54:08.421407+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:08.445942+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:08.450775+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-26T23:54:08.461518+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:08.462384+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:08.466854+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.466944+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:08.467833+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468073+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.468112+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:08.468189+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468287+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468612+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:08.470442+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.484835+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:08.494949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbd1b6"},"request_uri":"http://localhost:8000/_wdt/bbd1b6","method":"GET"} []
[2022-07-26T23:54:08.495932+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:15.323771+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:15.324561+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-26T23:54:15.326684+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:15.327026+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:15.327213+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:15.327467+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.327503+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:15.327653+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327704+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.327728+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:15.327786+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327865+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327980+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:15.328342+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.337040+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:15.342409+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a36fac"},"request_uri":"http://localhost:8000/_wdt/a36fac","method":"GET"} []
[2022-07-26T23:54:15.343288+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:19.781860+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-26T23:54:19.782900+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:54:19.794713+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:19.802166+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:19.803552+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:19.803766+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:19.803911+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.803956+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:19.804118+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804173+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.804197+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:19.804259+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804338+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804482+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:19.805010+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.813564+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:19.904935+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1ec12"},"request_uri":"http://localhost:8000/_wdt/b1ec12","method":"GET"} []
[2022-07-26T23:54:19.905304+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:55:05.472940+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-26T23:55:05.473813+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:55:05.475010+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:55:05.491957+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:55:05.492997+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:55:05.493211+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:55:05.493332+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.493366+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:55:05.493518+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493584+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.493610+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:55:05.493671+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493751+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493866+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:55:05.494273+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.502022+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:55:05.574875+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a71de"},"request_uri":"http://localhost:8000/_wdt/3a71de","method":"GET"} []
[2022-07-26T23:55:05.575234+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:56:06.489686+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-26T23:56:06.490065+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:56:06.492020+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:56:06.499575+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-26T23:56:06.504868+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"amira","2":"[\"\"]","3":"hello"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"amira","2":"[\"\"]","3":"hello"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-26T23:56:06.505063+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-26T23:56:06.585251+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-26T23:56:06.604452+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:56:06.605891+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:56:06.606065+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:56:06.606198+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.606237+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:56:06.606370+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606422+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.606446+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:56:06.606508+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606586+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606723+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:56:06.607232+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.613297+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:46:48.454061+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:46:48.490935+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:46:48.496911+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/" (from "http://localhost:8000/")" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" (from \"http://localhost:8000/\") at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T08:46:48.514326+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:46:48.515834+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:46:48.521975+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.522040+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:46:48.524141+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524364+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.524401+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:46:48.524470+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524559+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524990+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:46:48.527503+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.548251+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:46:48.559555+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dbcb8"},"request_uri":"http://localhost:8000/_wdt/0dbcb8","method":"GET"} []
[2022-07-27T08:46:48.561062+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:02.177903+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:02.179607+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T08:47:02.182284+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:47:02.182888+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:02.183148+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:02.183452+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.183506+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:47:02.183735+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.183900+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.183928+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:47:02.184003+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.184097+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.184250+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:47:02.184778+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.194150+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:47:02.202080+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"408648"},"request_uri":"http://localhost:8000/_wdt/408648","method":"GET"} []
[2022-07-27T08:47:02.203159+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:20.435030+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-27T08:47:20.504440+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:47:20.511133+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:47:20.558243+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:20.560117+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:20.560345+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:20.560484+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.560518+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:47:20.560676+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.560742+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.560771+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:47:20.560832+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.560912+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.561031+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:47:20.561465+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.570085+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:47:20.695292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54d03b"},"request_uri":"http://localhost:8000/_wdt/54d03b","method":"GET"} []
[2022-07-27T08:47:20.695708+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:49:38.390439+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:49:38.390960+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:49:38.393385+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:49:38.405669+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:49:38.406240+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:49:38.406565+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:49:38.406796+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:49:38.407720+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:49:38.408011+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:49:38.408709+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:49:38.416388+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"test1","2":"[\"\"]","3":"test1"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"test1","2":"[\"\"]","3":"test1"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:49:38.416549+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:49:38.423643+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:49:38.430177+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:49:38.431318+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:49:38.431457+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:49:38.431580+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.431611+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:49:38.431745+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.431792+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.431814+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:49:38.431872+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.431945+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.432062+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:49:38.432459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.444301+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:52:02.277380+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:52:02.277999+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:52:02.283232+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:52:02.285209+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:52:02.285333+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:52:02.285385+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:52:02.285428+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:52:02.285467+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:52:02.285516+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:52:02.287253+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.288146+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-27T08:52:02.288500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-27T08:52:02.290106+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.290724+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.292763+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-27T08:52:02.293301+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.401888+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:52:02.402215+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"cc","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$kIxt7I3dq8B38+nytWmQ9A$f3tL1V2U4bq6Dr/XuK3obzL2vDy8l9uGJ1reWrzHSuc"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"cc","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$kIxt7I3dq8B38+nytWmQ9A$f3tL1V2U4bq6Dr/XuK3obzL2vDy8l9uGJ1reWrzHSuc"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:52:02.402363+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:52:02.409822+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:52:02.410833+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:52:02.412137+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:52:02.412366+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:52:02.412560+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.412608+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:52:02.412855+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.412919+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.412947+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:52:02.413029+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.413121+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.413308+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:52:02.413909+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.425603+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:54:30.443553+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:54:30.451143+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:54:30.451744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:54:30.458080+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:54:30.458191+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:54:30.458265+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:54:30.458394+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:54:30.458443+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:54:30.458500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:54:30.458626+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458676+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-27T08:54:30.458714+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-27T08:54:30.458786+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458822+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458886+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-27T08:54:30.458936+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.580612+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:54:30.581032+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"cv","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$xeM+8x0a8HZsjyrUenc9YA$ytiv19vvuapWWr/g2KtZCQ4ZR/lWMNBpp6jtmLOcyak"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"cv","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$xeM+8x0a8HZsjyrUenc9YA$ytiv19vvuapWWr/g2KtZCQ4ZR/lWMNBpp6jtmLOcyak"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:54:30.581228+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:54:30.588493+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:54:30.590986+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:54:30.593478+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:54:30.593732+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:54:30.593945+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.593993+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:54:30.594208+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594294+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.594326+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:54:30.594404+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594531+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594710+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:54:30.595459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.611963+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T09:37:36.602933+02:00] deprecation.INFO: User Deprecated: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" class implements "Symfony\Component\Security\Guard\AuthenticatorInterface" that is deprecated since Symfony 5.3, use the new authenticator system instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator\" class implements \"Symfony\\Component\\Security\\Guard\\AuthenticatorInterface\" that is deprecated since Symfony 5.3, use the new authenticator system instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/error-handler/DebugClassLoader.php:390)"} []
[2022-07-27T09:37:37.085423+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T09:37:37.170525+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:07:52.814060+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:07:52.821501+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2022-07-27T10:07:52.823486+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T10:07:52.823527+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T10:07:52.823549+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T10:07:52.824630+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/Container7yJ8Xtb/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:07:52.825645+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T10:07:52.825774+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T10:07:52.828459+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:07:52.828670+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:07:52.828806+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.828837+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:07:52.829001+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829055+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.829079+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:07:52.829141+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829233+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829344+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:07:52.830003+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.840105+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:12:24.243803+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/Container7yJ8Xtb/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:12:24.244604+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/login"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/login\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T10:12:24.259791+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:12:24.260109+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:12:24.260285+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:12:24.260526+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.260558+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:12:24.260693+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260741+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.260764+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:12:24.260818+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260890+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260998+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:12:24.261374+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.271327+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:13:53.974012+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:13:53.981089+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:13:53.981866+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:13:53.981898+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.983687+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira@gmail.com"},"types":{"1":2}} []
[2022-07-27T10:13:53.986015+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"amira@gmail.com\" not found. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.986958+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.987112+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.987352+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerUxmqndZ/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:13:53.989400+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:13:53.989532+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:13:53.989653+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:53.989684+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:13:53.989823+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.989875+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:53.989898+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:13:53.989959+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.990038+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.990174+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:13:53.991742+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:54.001683+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:19:11.333436+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:19:11.341730+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:19:11.342638+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:19:11.342683+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:11.343447+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:19:11.344438+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "email" must be provided." at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php line 171 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"email\" must be provided. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php:171)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"email\" in class \"stdClass\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/property-access/PropertyAccessor.php:500)"} []
[2022-07-27T10:19:11.347713+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:11.347967+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:11.348124+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.348161+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:19:11.348323+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348385+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.348410+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:19:11.348470+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348550+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348667+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:19:11.349319+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.365841+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:19:34.720383+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:19:34.721851+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:19:34.722082+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.723371+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:19:34.724127+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira@gmail.com"},"types":{"1":2}} []
[2022-07-27T10:19:34.724252+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"amira@gmail.com\" not found. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.724814+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.724846+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.725044+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:19:34.727383+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:34.727518+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:34.727654+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.727686+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:19:34.727809+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.727858+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.727881+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:19:34.727941+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.728015+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.728151+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:19:34.728543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.735128+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:20:06.563036+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:20:06.563513+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:20:06.563549+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.564401+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:20:06.564996+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira"},"types":{"1":2}} []
[2022-07-27T10:20:06.566500+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/EventListener/CheckCredentialsListener.php:89)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567252+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567293+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567562+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:20:06.568889+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:06.569094+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:06.569285+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.569336+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:20:06.569533+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.569621+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.569658+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:20:06.569775+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.569907+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.570120+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:20:06.570779+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.577487+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:20:23.199614+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:20:23.200064+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:20:23.200098+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.200860+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:20:23.201417+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T10:20:23.301206+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.772646+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T10:20:23.772792+02:00] doctrine.DEBUG: Executing statement: UPDATE user SET password = ? WHERE id = ? (parameters: array{"1":"$2y$13$oMzIEomBNgq81rCu728V4eSPC9DV8rNzQJzA6VwivJ7MaketReg.i","2":3}, types: array{"1":2,"2":1}) {"sql":"UPDATE user SET password = ? WHERE id = ?","params":{"1":"$2y$13$oMzIEomBNgq81rCu728V4eSPC9DV8rNzQJzA6VwivJ7MaketReg.i","2":3},"types":{"1":2,"2":1}} []
[2022-07-27T10:20:23.772926+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T10:20:23.781068+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.781342+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:20:23.782474+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:23.782830+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:23.782990+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.783031+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:20:23.783163+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783228+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.783256+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:20:23.783329+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783406+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783522+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:20:23.783900+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.788433+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:43.220552+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:43.233436+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:08:43.265902+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:43.269718+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:43.270547+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:43.278603+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.278706+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:43.279668+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.279981+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.280028+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:43.280121+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.280234+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.280596+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:43.282119+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.311022+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:43.315576+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"072d9b"},"request_uri":"http://localhost:8000/_wdt/072d9b","method":"GET"} []
[2022-07-27T12:08:43.317772+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:47.887339+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-27T12:08:47.897647+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:08:47.897870+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:08:47.897943+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:08:47.899680+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:47.900393+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:08:47.900672+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:08:47.903010+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:47.903193+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:47.903375+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:47.903574+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.903608+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:47.903737+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.903793+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.903816+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:47.903872+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.903946+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.904054+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:47.904401+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.911834+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:58.320974+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login","method":"GET"} []
[2022-07-27T12:08:58.324744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T12:08:58.324828+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:08:58.324879+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:08:58.325289+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-27T12:08:58.325530+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:58.326309+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-27T12:08:58.336114+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:58.336313+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:58.336486+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:58.336697+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.336731+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:58.336884+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.336935+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.336960+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:58.337019+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.337098+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.337218+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:58.337613+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.354341+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:58.364911+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1796a5"},"request_uri":"http://localhost:8000/_wdt/1796a5","method":"GET"} []
[2022-07-27T12:08:58.365387+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:04.542278+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:04.543188+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/login"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/login\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/login/\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T12:09:04.556729+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:04.556918+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:04.557081+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:04.557275+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.557306+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:04.557433+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557490+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.557527+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:04.557596+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557678+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557812+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:04.558524+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.572281+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:09:04.582005+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00aaa0"},"request_uri":"http://localhost:8000/_wdt/00aaa0","method":"GET"} []
[2022-07-27T12:09:04.582668+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:13.402858+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:13.403554+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:09:13.404967+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:13.405188+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:13.405376+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:13.405593+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.405630+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:13.405776+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.405829+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.405853+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:13.405914+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.405995+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.406116+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:13.406498+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.416280+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:09:13.427118+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"532356"},"request_uri":"http://localhost:8000/_wdt/532356","method":"GET"} []
[2022-07-27T12:09:13.427625+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:32.278804+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T12:09:32.279399+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T12:09:32.279433+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.287749+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:32.294726+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:09:32.777195+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.784380+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.784630+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:32.785712+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:32.785875+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:32.786000+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.786030+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:32.786144+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786190+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.786212+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:32.786268+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786339+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786443+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:32.786850+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.792880+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:00.681315+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-27T12:10:00.681830+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:10:00.681869+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:00.681893+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:00.682298+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:00.682873+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:10:00.682940+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:10:00.684388+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:00.684687+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:00.685006+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:00.685365+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.685431+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:00.685678+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.685776+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.685823+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:00.685938+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.686097+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.686317+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:00.686920+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.694608+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:04.308658+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:04.309266+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:10:04.310441+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:04.310651+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:04.310827+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:04.311021+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.311053+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:04.311180+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311226+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.311257+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:04.311313+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311388+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311495+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:04.311817+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.317629+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:04.328244+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c73f4f"},"request_uri":"http://localhost:8000/_wdt/c73f4f","method":"GET"} []
[2022-07-27T12:10:04.328644+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:12.206334+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-27T12:10:12.208731+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:10:12.208834+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:12.208912+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:12.209744+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:12.210729+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:10:12.210818+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:10:12.212560+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:12.212805+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:12.213054+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:12.213338+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.213389+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:12.213576+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.213649+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.213685+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:12.213772+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.213886+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.214051+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:12.214543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.220823+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:18.094892+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:18.095653+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:10:18.097515+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:18.097719+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:18.097911+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:18.098406+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.098467+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:18.098659+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.098733+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.098778+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:18.098862+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.098977+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.099134+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:18.099542+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.107698+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:18.118748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"12ee4f"},"request_uri":"http://localhost:8000/_wdt/12ee4f","method":"GET"} []
[2022-07-27T12:10:18.119266+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:17:18.629781+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:17:18.630360+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/api/login_check"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api/login_check\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T12:17:18.646286+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:17:18.646545+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:17:18.646756+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:17:18.647035+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.647090+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:17:18.647239+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647291+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.647316+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:17:18.647378+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647460+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647582+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:17:18.647982+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.658831+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:18:52.988679+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2022-07-27T12:18:52.989108+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:18:52.989135+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:52.992424+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:18:52.992900+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:18:52.993452+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:52.993509+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:53.016345+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:18:53.017375+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:18:53.017509+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:18:53.017628+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.017658+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:18:53.017776+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.017831+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.017854+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:18:53.017912+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.017982+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.018101+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:18:53.018580+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.023483+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:19:57.731624+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-27T12:19:57.732783+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:19:57.732838+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.736272+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:19:57.736989+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:19:57.737316+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.737393+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.758320+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-27T12:19:57.782497+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-27T12:19:57.784257+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:19:57.786139+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:19:57.786323+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:19:57.786548+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.786601+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:19:57.786800+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.786871+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.786919+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:19:57.787019+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.787152+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.787347+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:19:57.788032+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.794937+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:04:51.503537+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:04:51.520370+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T13:04:51.556234+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:04:51.561007+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:04:51.561803+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:04:51.568543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.568615+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:04:51.569420+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.569667+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.569704+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:04:51.569793+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.569902+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.570210+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:04:51.571885+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.599605+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:04:51.602851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f82978"},"request_uri":"http://localhost:8000/_wdt/f82978","method":"GET"} []
[2022-07-27T13:04:51.605684+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:28.406343+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T13:08:28.411655+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T13:08:28.411695+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.418828+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:08:28.426280+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T13:08:28.896928+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.904216+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.904474+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:28.905790+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:28.905959+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:28.906095+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.906129+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:08:28.906256+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906307+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.906331+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:08:28.906391+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906481+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906610+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:08:28.907002+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.911047+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:08:31.212645+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T13:08:31.213066+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T13:08:31.213094+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.213849+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:08:31.214503+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T13:08:31.670498+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.673105+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.673410+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:31.674702+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:31.674856+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:31.674988+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.675022+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:08:31.675172+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675232+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.675257+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:08:31.675319+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675396+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675513+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:08:31.675910+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.681043+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:14:05.689576+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-28T09:14:05.692018+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-28T09:14:05.692657+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-28T09:14:05.692892+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-28T09:33:56.050109+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:56.062787+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T09:33:56.099305+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:33:56.103684+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:56.104433+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:56.110466+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.110539+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:33:56.111441+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.111672+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.111713+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:33:56.111791+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.111873+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.112153+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:33:56.113635+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.140280+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:33:56.144975+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc28d8"},"request_uri":"http://localhost:8000/_wdt/bc28d8","method":"GET"} []
[2022-07-28T09:33:56.147691+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:59.921110+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:33:59.930069+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:33:59.930142+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:33:59.930170+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:33:59.931874+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:59.932460+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:33:59.932679+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:33:59.934616+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:33:59.934810+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:59.935003+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:59.935192+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.935222+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:33:59.935351+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935400+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.935423+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:33:59.935483+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935557+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935681+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:33:59.936029+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.944163+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:34:07.138618+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:07.139451+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T09:34:07.140800+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:34:07.141000+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:07.141186+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:07.141410+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.141444+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:34:07.141592+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141645+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.141668+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:34:07.141727+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141811+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141925+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:34:07.142269+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.150001+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:34:07.158115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"303c02"},"request_uri":"http://localhost:8000/_wdt/303c02","method":"GET"} []
[2022-07-28T09:34:07.158698+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:46.069471+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T09:34:46.071821+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:34:46.071858+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.074546+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.078978+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.079131+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.079361+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:46.080619+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:34:46.080791+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:46.080950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:46.081138+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.081169+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:34:46.081296+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081344+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.081366+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:34:46.081428+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081501+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081607+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:34:46.081937+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.090408+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:35:03.443749+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-28T09:35:03.514666+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:35:03.514808+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:03.531811+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:35:03.538927+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T09:35:04.005731+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:04.017470+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:04.017792+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:35:04.019417+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:04.019632+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:04.019795+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.019837+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:35:04.020006+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020083+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.020111+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:35:04.020201+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020310+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020459+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:35:04.020955+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.026021+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:35:27.265875+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T09:35:27.266316+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:35:27.266343+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.270269+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:35:27.270782+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T09:35:27.271380+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.271440+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.295974+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-28T09:35:27.305026+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-28T09:35:27.306088+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:35:27.307230+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:27.307352+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:27.307479+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.307509+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:35:27.307637+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307687+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.307710+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:35:27.307771+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307848+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307961+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:35:27.308346+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.314293+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:36:54.985936+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:36:54.986498+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/gateways"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/gateways\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/gateways\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-28T09:36:55.006108+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:36:55.006348+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:36:55.006560+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:36:55.006851+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.006893+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:36:55.007046+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007099+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.007124+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:36:55.007183+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007266+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007389+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:36:55.007776+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.017450+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:37.124396+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:37:37.124862+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:37:37.124904+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:37:37.124925+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:37:37.125420+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:37:37.126035+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:37:37.126085+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:37:37.127283+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:37:37.127480+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:37.127658+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:37.127864+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.127896+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:37:37.128021+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128069+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.128091+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:37:37.128147+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128227+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128333+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:37:37.128663+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.137318+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:42.486504+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login","method":"GET"} []
[2022-07-28T09:37:42.487039+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:37:42.487089+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:37:42.487116+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:37:42.487352+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:37:42.487486+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:37:42.487933+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:37:42.492293+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:37:42.492467+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:42.492642+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:42.492838+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.492868+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:37:42.492992+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493038+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.493060+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:37:42.493112+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493289+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:37:42.493617+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.505776+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:42.539454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff1d9b"},"request_uri":"http://localhost:8000/_wdt/ff1d9b","method":"GET"} []
[2022-07-28T09:37:42.540051+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:08.992786+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-28T09:38:08.993442+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:38:08.993481+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:08.993502+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:08.993897+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:08.994460+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:38:08.994502+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:38:08.995772+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:38:08.995956+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:08.996123+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:08.996320+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:08.996352+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:38:08.996477+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996534+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:08.996557+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:38:08.996613+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996685+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996793+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:38:08.997128+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:09.005178+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:38:17.818431+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:38:17.818877+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:38:17.818914+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:17.818933+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:17.819271+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:17.819785+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:38:17.819826+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:38:17.820897+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:38:17.821118+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:17.821320+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:17.821554+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.821591+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:38:17.821737+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.821793+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.821819+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:38:17.821884+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.821973+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.822095+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:38:17.822480+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.828277+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:39:22.564722+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"GET"} []
[2022-07-28T09:39:22.565472+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:39:22.565509+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:22.565554+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:22.565806+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:39:22.565954+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:39:22.566459+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:39:22.571263+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:39:22.571519+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:22.571739+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:22.572024+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.572062+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:39:22.572245+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572301+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.572336+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:39:22.572397+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572476+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572594+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:39:22.572975+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.583798+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:39:50.893805+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"GET"} []
[2022-07-28T09:39:50.894307+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:39:50.894342+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:50.894364+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:50.894603+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:39:50.894743+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:39:50.895255+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:39:50.901461+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:39:50.901701+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:50.901909+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:50.902147+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.902186+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:39:50.902340+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902397+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.902424+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:39:50.902489+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902574+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902698+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:39:50.903366+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.914920+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:41:48.744495+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:41:48.745085+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/gateways"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/gateways\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/gateways\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-28T09:41:48.757509+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:41:48.757747+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:41:48.757953+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:41:48.758253+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.758290+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:41:48.758715+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.758799+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.758851+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:41:48.758924+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.759017+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.759157+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:41:48.759559+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.768551+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:44:48.374863+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:44:48.790267+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:45:55.086560+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:04:42.997976+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:22:22.041970+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:25:08.416099+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:26:43.677362+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:26:43.678929+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.679365+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.682157+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.682201+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.682660+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.682873+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.682910+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.682981+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.683068+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.683284+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:43.684332+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.684413+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.684478+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.684501+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.684567+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684606+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.684631+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.684664+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684729+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684814+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:43.685343+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.685410+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685432+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.685495+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685531+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685549+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.685579+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685642+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685669+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685687+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('user') {"sql":"PRAGMA table_info('user')"} []
[2022-07-28T10:26:43.685744+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["user"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["user"],"types":[]} []
[2022-07-28T10:26:43.685998+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.686025+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('user') {"sql":"PRAGMA index_list('user')"} []
[2022-07-28T10:26:43.686063+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["user"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["user"],"types":[]} []
[2022-07-28T10:26:43.686125+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_INDEX_INFO (?) (parameters: array["UNIQ_8D93D649E7927C74"], types: array[]) {"sql":"SELECT * FROM PRAGMA_INDEX_INFO (?)","params":["UNIQ_8D93D649E7927C74"],"types":[]} []
[2022-07-28T10:26:43.686188+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["user"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["user"],"types":[]} []
[2022-07-28T10:26:43.697700+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:26:50.985650+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:26:50.986774+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.774231+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:51.784262+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.784390+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:51.785329+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.785701+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.785769+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:51.785894+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.786049+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.788161+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.788430+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.788525+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.790600+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T10:26:51.798314+02:00] doctrine.DEBUG: Executing query: CREATE TABLE gateway (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL, pulling_period INTEGER NOT NULL, pushing_period INTEGER NOT NULL, host VARCHAR(255) NOT NULL, port INTEGER NOT NULL, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, use_tls INTEGER NOT NULL, topic VARCHAR(255) NOT NULL, log_file VARCHAR(255) NOT NULL, backup_file VARCHAR(255) NOT NULL, hw_model VARCHAR(255) NOT NULL, sw_version VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, board_serial_number VARCHAR(255) NOT NULL, asset_id VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE gateway (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL, pulling_period INTEGER NOT NULL, pushing_period INTEGER NOT NULL, host VARCHAR(255) NOT NULL, port INTEGER NOT NULL, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, use_tls INTEGER NOT NULL, topic VARCHAR(255) NOT NULL, log_file VARCHAR(255) NOT NULL, backup_file VARCHAR(255) NOT NULL, hw_model VARCHAR(255) NOT NULL, sw_version VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, board_serial_number VARCHAR(255) NOT NULL, asset_id VARCHAR(255) NOT NULL)"} []
[2022-07-28T10:26:51.798597+02:00] doctrine.DEBUG: Executing query: CREATE TABLE meter (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, node_id INTEGER NOT NULL, name VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, manufacturer VARCHAR(255) NOT NULL, method VARCHAR(255) NOT NULL, port VARCHAR(255) NOT NULL, baudrate INTEGER NOT NULL, token VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE meter (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, node_id INTEGER NOT NULL, name VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, manufacturer VARCHAR(255) NOT NULL, method VARCHAR(255) NOT NULL, port VARCHAR(255) NOT NULL, baudrate INTEGER NOT NULL, token VARCHAR(255) NOT NULL)"} []
[2022-07-28T10:26:51.798833+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220728082643","2":"2022-07-28 10:26:51","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220728082643","2":"2022-07-28 10:26:51","3":8},"types":{"1":2,"2":2,"3":1}} []
[2022-07-28T10:26:51.798987+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T10:26:51.808315+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:38.706303+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:38.756804+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T10:27:38.765535+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:38.765583+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:38.765605+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:38.769042+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:38.775729+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:38.775944+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:38.790590+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:38.791369+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:38.795106+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.795181+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:38.796176+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796433+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.796477+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:38.796563+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796673+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796966+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:38.798902+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.818658+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:39.702214+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T10:27:39.703038+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:39.703132+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:39.703194+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:39.704140+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:39.705375+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:39.705498+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:39.708730+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:39.709016+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:39.709376+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:39.709661+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.709750+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:39.709993+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710096+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.710148+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:39.710277+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710469+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710784+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:39.711589+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.718761+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:41.902998+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:41.905099+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T10:27:41.910021+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:41.910496+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:41.910940+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:41.911459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.911552+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:41.911773+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.911844+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.911876+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:41.911973+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.912104+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.912279+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:41.912785+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.920707+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:41.927434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"72d300"},"request_uri":"http://localhost:8000/_wdt/72d300","method":"GET"} []
[2022-07-28T10:27:41.929123+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:58.939434+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:27:58.940528+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:58.940567+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:58.940587+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:58.940980+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:58.941500+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:58.941599+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:58.943715+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:58.944008+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:58.944304+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:58.944632+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.944700+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:58.944919+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.944983+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.945008+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:58.945068+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.945147+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.945270+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:58.945771+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.953204+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:05.845287+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:05.845775+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:05.845803+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:05.845830+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:05.846145+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:05.846608+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:37:05.846651+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:37:05.848006+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:05.848239+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:05.848430+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:05.848722+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.848764+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:05.848930+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.848993+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.849016+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:05.849080+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.849152+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.849261+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:05.849663+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.855163+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:29.672375+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:29.672829+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:29.672857+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.674887+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675603+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675725+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675926+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:29.677128+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:29.677303+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:29.677480+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:29.677670+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.677702+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:29.677829+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.677876+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.677897+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:29.677951+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.678021+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.678126+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:29.678466+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.683704+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:32.249313+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:32.250252+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:32.250493+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.250720+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251299+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251331+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251564+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:32.253524+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:32.253742+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:32.253950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:32.254215+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.254257+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:32.254401+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254463+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.254488+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:32.254549+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254629+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254749+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:32.255174+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.260467+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:35.747440+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-28T10:37:35.749235+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T10:37:35.749275+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:35.751361+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:35.757496+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T10:37:36.192009+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:36.197106+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:36.197338+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:36.198413+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:36.198574+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:36.198687+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.198716+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:36.198875+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.198935+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.198957+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:36.199013+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.199086+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.199194+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:36.199572+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.204007+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:49.307666+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:49.308367+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:49.308409+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.311499+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:49.311979+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T10:37:49.312579+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.312633+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.338413+02:00] doctrine.DEBUG: Executing query: SELECT g0_.id AS id_0, g0_.name AS name_1, g0_.location AS location_2, g0_.pulling_period AS pulling_period_3, g0_.pushing_period AS pushing_period_4, g0_.host AS host_5, g0_.port AS port_6, g0_.username AS username_7, g0_.password AS password_8, g0_.use_tls AS use_tls_9, g0_.topic AS topic_10, g0_.log_file AS log_file_11, g0_.backup_file AS backup_file_12, g0_.hw_model AS hw_model_13, g0_.sw_version AS sw_version_14, g0_.serial_number AS serial_number_15, g0_.board_serial_number AS board_serial_number_16, g0_.asset_id AS asset_id_17 FROM gateway g0_ ORDER BY g0_.id ASC LIMIT 30 {"sql":"SELECT g0_.id AS id_0, g0_.name AS name_1, g0_.location AS location_2, g0_.pulling_period AS pulling_period_3, g0_.pushing_period AS pushing_period_4, g0_.host AS host_5, g0_.port AS port_6, g0_.username AS username_7, g0_.password AS password_8, g0_.use_tls AS use_tls_9, g0_.topic AS topic_10, g0_.log_file AS log_file_11, g0_.backup_file AS backup_file_12, g0_.hw_model AS hw_model_13, g0_.sw_version AS sw_version_14, g0_.serial_number AS serial_number_15, g0_.board_serial_number AS board_serial_number_16, g0_.asset_id AS asset_id_17 FROM gateway g0_ ORDER BY g0_.id ASC LIMIT 30"} []
[2022-07-28T10:37:49.340443+02:00] doctrine.DEBUG: Executing query: SELECT count(g0_.id) AS sclr_0 FROM gateway g0_ {"sql":"SELECT count(g0_.id) AS sclr_0 FROM gateway g0_"} []
[2022-07-28T10:37:49.341340+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:49.342523+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:49.342632+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:49.342773+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.342821+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:49.342964+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343010+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.343032+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:49.343088+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343158+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343265+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:49.343704+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.349973+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:38:40.623105+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:38:40.623812+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:38:40.623845+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:38:40.623879+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:38:40.624209+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:38:40.624628+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:38:40.624668+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:38:40.625754+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:38:40.625937+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:38:40.626120+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:38:40.626343+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.626375+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:38:40.626504+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626551+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.626575+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:38:40.626638+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626711+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626857+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:38:40.627225+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.633137+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:00.268457+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:00.290262+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:00.291334+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:00.291367+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:00.291385+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:00.315431+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerQ0vUGBI/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:00.316759+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:00.316980+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:00.317112+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.317142+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:00.317282+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317329+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.317351+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:00.317406+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317477+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317585+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:00.318272+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.329064+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:00.431735+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1653fc"},"request_uri":"http://localhost:8000/_wdt/1653fc","method":"GET"} []
[2022-07-28T10:42:00.432301+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerQ0vUGBI/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:24.819402+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:24.842700+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:24.843794+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:24.843824+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:24.843841+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:24.844317+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:24.844863+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:42:24.844899+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:42:24.846629+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:24.846873+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:24.847011+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.847042+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:24.847182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847236+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.847260+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:24.847316+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847389+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847498+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:24.848144+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.858040+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:39.316283+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:39.340201+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:39.341048+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:39.341080+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:39.341100+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:39.361655+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:39.363113+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:39.363362+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:39.363499+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.363533+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:39.363687+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.363739+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.363763+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:39.363824+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.363903+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.364023+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:39.364760+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.375499+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:39.479025+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"95410a"},"request_uri":"http://localhost:8000/_wdt/95410a","method":"GET"} []
[2022-07-28T10:42:39.479482+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:55.561672+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?page=1","method":"GET"} []
[2022-07-28T10:42:55.563113+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:55.563147+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:55.563164+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:55.564360+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:55.572522+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-28T10:42:55.578204+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-28T10:42:55.578604+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:55.580207+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:55.580322+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:55.580441+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.580471+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:55.580612+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580665+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.580687+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:55.580743+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580813+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580918+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:55.581334+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.588294+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:43:17.107097+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:43:17.129637+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:43:17.130422+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:43:17.130455+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:17.130473+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:17.151869+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:17.153473+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:17.153720+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:17.153861+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.153893+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:43:17.154051+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154107+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.154133+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:43:17.154196+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154277+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154429+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:43:17.156048+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.166116+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:43:17.279883+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eadc85"},"request_uri":"http://localhost:8000/_wdt/eadc85","method":"GET"} []
[2022-07-28T10:43:17.280327+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:21.057943+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?page=1","method":"GET"} []
[2022-07-28T10:43:21.059250+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:43:21.059282+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:21.059300+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:21.059955+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:21.060576+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:43:21.060618+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:43:21.062143+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:43:21.062454+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:21.062645+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:21.062918+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.062976+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:43:21.063116+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063164+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.063187+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:43:21.063243+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063317+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063428+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:43:21.063790+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.071595+02:00] doctrine.INFO: Disconnecting [] []
