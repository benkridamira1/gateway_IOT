[2022-07-26T13:08:12.530596+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerSmwwPEs/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-26T13:08:12.531877+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerSmwwPEs/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-26T13:08:12.532258+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-26T13:08:12.532358+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-26T23:36:47.904759+02:00] console.CRITICAL: Error thrown while running command "make". Message: "Command "make" is not defined.  Did you mean one of these?     make:auth     make:command     make:controller     make:crud     make:docker:database     make:entity     make:fixtures     make:form     make:functional-test     make:message     make:messenger-middleware     make:migration     make:registration-form     make:reset-password     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:test     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/console/Application.php:682)","command":"make","message":"Command \"make\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2022-07-26T23:36:55.872741+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-07-26T23:36:55.874169+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: could not find driver" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in the driver: could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:91)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 0): could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 0): could not find driver at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)","command":"make:migration","message":"An exception occurred in the driver: could not find driver"} []
[2022-07-26T23:36:55.874312+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2022-07-26T23:38:19.689248+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:38:19.691253+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.692112+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.692643+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:19.703124+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:38:34.216473+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:38:34.217613+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:38:35.593660+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:38:35.596434+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INTEGER DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INTEGER DEFAULT NULL, PRIMARY KEY(version))"} []
[2022-07-26T23:38:35.606554+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.607027+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.607208+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:38:35.610765+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-26T23:38:35.618203+02:00] doctrine.DEBUG: Executing query: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json)         , password VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json)\n        , password VARCHAR(255) NOT NULL)"} []
[2022-07-26T23:38:35.618402+02:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) {"sql":"CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email)"} []
[2022-07-26T23:38:35.618820+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220726213819","2":"2022-07-26 23:38:35","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220726213819","2":"2022-07-26 23:38:35","3":8},"types":{"1":2,"2":2,"3":1}} []
[2022-07-26T23:38:35.618942+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-26T23:38:35.627368+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:48:07.276848+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-26T23:48:07.277320+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-26T23:48:07.277353+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-26T23:48:07.277367+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-26T23:48:49.513507+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.513666+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-26T23:48:49.513752+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-26T23:48:49.514034+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.514129+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-26T23:48:49.514397+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-26T23:48:49.514500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-26T23:54:08.421407+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:08.445942+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:08.450775+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-26T23:54:08.461518+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:08.462384+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:08.466854+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.466944+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:08.467833+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468073+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.468112+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:08.468189+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468287+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:08.468612+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:08.470442+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:08.484835+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:08.494949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbd1b6"},"request_uri":"http://localhost:8000/_wdt/bbd1b6","method":"GET"} []
[2022-07-26T23:54:08.495932+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:15.323771+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:15.324561+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-26T23:54:15.326684+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:15.327026+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:15.327213+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:15.327467+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.327503+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:15.327653+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327704+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.327728+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:15.327786+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327865+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:15.327980+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:15.328342+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:15.337040+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:15.342409+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a36fac"},"request_uri":"http://localhost:8000/_wdt/a36fac","method":"GET"} []
[2022-07-26T23:54:15.343288+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:19.781860+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-26T23:54:19.782900+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:54:19.794713+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:54:19.802166+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:54:19.803552+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:19.803766+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:54:19.803911+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.803956+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:54:19.804118+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804173+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.804197+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:54:19.804259+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804338+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:54:19.804482+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:54:19.805010+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:54:19.813564+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:54:19.904935+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1ec12"},"request_uri":"http://localhost:8000/_wdt/b1ec12","method":"GET"} []
[2022-07-26T23:54:19.905304+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:55:05.472940+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-26T23:55:05.473813+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:55:05.475010+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:55:05.491957+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:55:05.492997+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:55:05.493211+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:55:05.493332+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.493366+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:55:05.493518+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493584+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.493610+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:55:05.493671+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493751+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:55:05.493866+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:55:05.494273+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:55:05.502022+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-26T23:55:05.574875+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a71de"},"request_uri":"http://localhost:8000/_wdt/3a71de","method":"GET"} []
[2022-07-26T23:55:05.575234+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:56:06.489686+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-26T23:56:06.490065+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-26T23:56:06.492020+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-26T23:56:06.499575+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-26T23:56:06.504868+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"amira","2":"[\"\"]","3":"hello"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"amira","2":"[\"\"]","3":"hello"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-26T23:56:06.505063+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-26T23:56:06.585251+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-26T23:56:06.604452+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerV1VIHeR/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-26T23:56:06.605891+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:56:06.606065+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-26T23:56:06.606198+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.606237+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-26T23:56:06.606370+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606422+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.606446+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-26T23:56:06.606508+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606586+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-26T23:56:06.606723+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-26T23:56:06.607232+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-26T23:56:06.613297+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:46:48.454061+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:46:48.490935+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:46:48.496911+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/" (from "http://localhost:8000/")" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" (from \"http://localhost:8000/\") at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T08:46:48.514326+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:46:48.515834+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:46:48.521975+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.522040+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:46:48.524141+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524364+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.524401+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:46:48.524470+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524559+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:46:48.524990+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:46:48.527503+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:46:48.548251+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:46:48.559555+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dbcb8"},"request_uri":"http://localhost:8000/_wdt/0dbcb8","method":"GET"} []
[2022-07-27T08:46:48.561062+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:02.177903+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:02.179607+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T08:47:02.182284+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:47:02.182888+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:02.183148+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:02.183452+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.183506+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:47:02.183735+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.183900+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.183928+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:47:02.184003+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.184097+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:02.184250+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:47:02.184778+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:02.194150+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:47:02.202080+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"408648"},"request_uri":"http://localhost:8000/_wdt/408648","method":"GET"} []
[2022-07-27T08:47:02.203159+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:20.435030+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-27T08:47:20.504440+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:47:20.511133+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:47:20.558243+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:47:20.560117+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:20.560345+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:47:20.560484+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.560518+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:47:20.560676+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.560742+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.560771+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:47:20.560832+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.560912+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:47:20.561031+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:47:20.561465+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:47:20.570085+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:47:20.695292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54d03b"},"request_uri":"http://localhost:8000/_wdt/54d03b","method":"GET"} []
[2022-07-27T08:47:20.695708+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:49:38.390439+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:49:38.390960+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:49:38.393385+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:49:38.405669+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:49:38.406240+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:49:38.406565+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:49:38.406796+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:49:38.407720+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:49:38.408011+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:49:38.408709+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:49:38.416388+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"test1","2":"[\"\"]","3":"test1"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"test1","2":"[\"\"]","3":"test1"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:49:38.416549+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:49:38.423643+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:49:38.430177+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:49:38.431318+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:49:38.431457+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:49:38.431580+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.431611+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:49:38.431745+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.431792+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.431814+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:49:38.431872+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.431945+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:49:38.432062+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:49:38.432459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:49:38.444301+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:52:02.277380+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:52:02.277999+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:52:02.283232+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:52:02.285209+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:52:02.285333+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:52:02.285385+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:52:02.285428+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:52:02.285467+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:52:02.285516+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:52:02.287253+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.288146+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-27T08:52:02.288500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-27T08:52:02.290106+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.290724+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.292763+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-27T08:52:02.293301+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-27T08:52:02.401888+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:52:02.402215+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"cc","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$kIxt7I3dq8B38+nytWmQ9A$f3tL1V2U4bq6Dr/XuK3obzL2vDy8l9uGJ1reWrzHSuc"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"cc","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$kIxt7I3dq8B38+nytWmQ9A$f3tL1V2U4bq6Dr/XuK3obzL2vDy8l9uGJ1reWrzHSuc"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:52:02.402363+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:52:02.409822+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:52:02.410833+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:52:02.412137+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:52:02.412366+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:52:02.412560+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.412608+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:52:02.412855+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.412919+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.412947+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:52:02.413029+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.413121+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:52:02.413308+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:52:02.413909+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:52:02.425603+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T08:54:30.443553+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T08:54:30.451143+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2022-07-27T08:54:30.451744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-27T08:54:30.458080+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.password_encoder" service is deprecated, use "security.user_password_hasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.password_encoder\" service is deprecated, use \"security.user_password_hasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_PasswordEncoderService.php:22)"} []
[2022-07-27T08:54:30.458191+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:19)"} []
[2022-07-27T08:54:30.458265+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/UserPasswordEncoderInterface.php:17)"} []
[2022-07-27T08:54:30.458394+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-27T08:54:30.458443+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-27T08:54:30.458500+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-27T08:54:30.458626+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SodiumPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SodiumPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\SodiumPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SodiumPasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458676+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\PasswordHasherInterface\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/PasswordEncoderInterface.php:17)"} []
[2022-07-27T08:54:30.458714+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\SelfSaltingEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\LegacyPasswordHasherInterface" on hasher implementations that deal with salts instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\SelfSaltingEncoderInterface\" interface is deprecated, use \"Symfony\\Component\\PasswordHasher\\LegacyPasswordHasherInterface\" on hasher implementations that deal with salts instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/SelfSaltingEncoderInterface.php:16)"} []
[2022-07-27T08:54:30.458786+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\Pbkdf2PasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/Pbkdf2PasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458822+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\BasePasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\CheckPasswordLengthTrait" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\BasePasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\CheckPasswordLengthTrait\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/BasePasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.458886+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MessageDigestPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MessageDigestPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MessageDigestPasswordEncoder.php:17)"} []
[2022-07-27T08:54:30.458936+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\MigratingPasswordHasher" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\MigratingPasswordEncoder\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\MigratingPasswordHasher\" instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-core/Encoder/MigratingPasswordEncoder.php:16)"} []
[2022-07-27T08:54:30.580612+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T08:54:30.581032+02:00] doctrine.DEBUG: Executing statement: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) (parameters: array{"1":"cv","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$xeM+8x0a8HZsjyrUenc9YA$ytiv19vvuapWWr/g2KtZCQ4ZR/lWMNBpp6jtmLOcyak"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO user (email, roles, password) VALUES (?, ?, ?)","params":{"1":"cv","2":"[]","3":"$argon2id$v=19$m=65536,t=4,p=1$xeM+8x0a8HZsjyrUenc9YA$ytiv19vvuapWWr/g2KtZCQ4ZR/lWMNBpp6jtmLOcyak"},"types":{"1":2,"2":2,"3":2}} []
[2022-07-27T08:54:30.581228+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T08:54:30.588493+02:00] deprecation.INFO: User Deprecated: Not returning an object from ApiPlatform\Core\DataPersister\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not returning an object from ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist() is deprecated since API Platform 2.3 and will not be supported in API Platform 3. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/api-platform/core/src/EventListener/WriteListener.php:79)"} []
[2022-07-27T08:54:30.590986+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerXpclrbE/App_KernelDevDebugContainer.php","line":1410,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T08:54:30.593478+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:54:30.593732+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T08:54:30.593945+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.593993+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T08:54:30.594208+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594294+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.594326+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T08:54:30.594404+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594531+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T08:54:30.594710+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T08:54:30.595459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T08:54:30.611963+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T09:37:36.602933+02:00] deprecation.INFO: User Deprecated: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" class implements "Symfony\Component\Security\Guard\AuthenticatorInterface" that is deprecated since Symfony 5.3, use the new authenticator system instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator\" class implements \"Symfony\\Component\\Security\\Guard\\AuthenticatorInterface\" that is deprecated since Symfony 5.3, use the new authenticator system instead. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/error-handler/DebugClassLoader.php:390)"} []
[2022-07-27T09:37:37.085423+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T09:37:37.170525+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:07:52.814060+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:07:52.821501+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2022-07-27T10:07:52.823486+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T10:07:52.823527+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T10:07:52.823549+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T10:07:52.824630+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/Container7yJ8Xtb/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:07:52.825645+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T10:07:52.825774+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T10:07:52.828459+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:07:52.828670+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:07:52.828806+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.828837+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:07:52.829001+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829055+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.829079+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:07:52.829141+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829233+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:07:52.829344+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:07:52.830003+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:07:52.840105+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:12:24.243803+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/Container7yJ8Xtb/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:12:24.244604+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/login"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/login\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T10:12:24.259791+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:12:24.260109+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:12:24.260285+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:12:24.260526+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.260558+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:12:24.260693+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260741+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.260764+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:12:24.260818+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260890+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:12:24.260998+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:12:24.261374+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:12:24.271327+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:13:53.974012+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:13:53.981089+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:13:53.981866+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:13:53.981898+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.983687+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira@gmail.com"},"types":{"1":2}} []
[2022-07-27T10:13:53.986015+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"amira@gmail.com\" not found. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.986958+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.987112+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:13:53.987352+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerUxmqndZ/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:13:53.989400+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:13:53.989532+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:13:53.989653+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:53.989684+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:13:53.989823+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.989875+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:53.989898+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:13:53.989959+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.990038+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:13:53.990174+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:13:53.991742+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:13:54.001683+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:19:11.333436+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:19:11.341730+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:19:11.342638+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:19:11.342683+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:11.343447+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:19:11.344438+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "email" must be provided." at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php line 171 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"email\" must be provided. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Authenticator/JsonLoginAuthenticator.php:171)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"email\" in class \"stdClass\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/property-access/PropertyAccessor.php:500)"} []
[2022-07-27T10:19:11.347713+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:11.347967+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:11.348124+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.348161+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:19:11.348323+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348385+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.348410+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:19:11.348470+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348550+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:11.348667+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:19:11.349319+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:11.365841+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:19:34.720383+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:19:34.721851+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:19:34.722082+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.723371+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:19:34.724127+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira@gmail.com"},"types":{"1":2}} []
[2022-07-27T10:19:34.724252+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"amira@gmail.com\" not found. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.724814+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.724846+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:19:34.725044+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:19:34.727383+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:34.727518+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:19:34.727654+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.727686+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:19:34.727809+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.727858+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.727881+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:19:34.727941+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.728015+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:19:34.728151+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:19:34.728543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:19:34.735128+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:20:06.563036+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:20:06.563513+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:20:06.563549+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.564401+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:20:06.564996+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"amira"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"amira"},"types":{"1":2}} []
[2022-07-27T10:20:06.566500+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/EventListener/CheckCredentialsListener.php:89)","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567252+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the failure response. {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567293+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:06.567562+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:20:06.568889+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:06.569094+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:06.569285+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.569336+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:20:06.569533+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.569621+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.569658+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:20:06.569775+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.569907+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:06.570120+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:20:06.570779+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:06.577487+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T10:20:23.199614+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T10:20:23.200064+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T10:20:23.200098+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.200860+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T10:20:23.201417+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T10:20:23.301206+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.772646+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-27T10:20:23.772792+02:00] doctrine.DEBUG: Executing statement: UPDATE user SET password = ? WHERE id = ? (parameters: array{"1":"$2y$13$oMzIEomBNgq81rCu728V4eSPC9DV8rNzQJzA6VwivJ7MaketReg.i","2":3}, types: array{"1":2,"2":1}) {"sql":"UPDATE user SET password = ? WHERE id = ?","params":{"1":"$2y$13$oMzIEomBNgq81rCu728V4eSPC9DV8rNzQJzA6VwivJ7MaketReg.i","2":3},"types":{"1":2,"2":1}} []
[2022-07-27T10:20:23.772926+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-27T10:20:23.781068+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T10:20:23.781342+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T10:20:23.782474+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:23.782830+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T10:20:23.782990+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.783031+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T10:20:23.783163+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783228+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.783256+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T10:20:23.783329+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783406+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T10:20:23.783522+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T10:20:23.783900+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T10:20:23.788433+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:43.220552+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:43.233436+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:08:43.265902+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:43.269718+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:43.270547+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:43.278603+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.278706+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:43.279668+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.279981+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.280028+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:43.280121+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.280234+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:43.280596+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:43.282119+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:43.311022+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:43.315576+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"072d9b"},"request_uri":"http://localhost:8000/_wdt/072d9b","method":"GET"} []
[2022-07-27T12:08:43.317772+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:47.887339+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-27T12:08:47.897647+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:08:47.897870+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:08:47.897943+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:08:47.899680+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:47.900393+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:08:47.900672+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:08:47.903010+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:47.903193+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:47.903375+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:47.903574+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.903608+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:47.903737+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.903793+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.903816+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:47.903872+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.903946+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:47.904054+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:47.904401+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:47.911834+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:58.320974+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login","method":"GET"} []
[2022-07-27T12:08:58.324744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T12:08:58.324828+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:08:58.324879+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:08:58.325289+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-27T12:08:58.325530+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:08:58.326309+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-27T12:08:58.336114+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:08:58.336313+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:58.336486+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:08:58.336697+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.336731+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:08:58.336884+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.336935+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.336960+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:08:58.337019+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.337098+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:08:58.337218+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:08:58.337613+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:08:58.354341+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:08:58.364911+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1796a5"},"request_uri":"http://localhost:8000/_wdt/1796a5","method":"GET"} []
[2022-07-27T12:08:58.365387+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:04.542278+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:04.543188+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/login"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/login\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/login/\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T12:09:04.556729+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:04.556918+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:04.557081+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:04.557275+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.557306+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:04.557433+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557490+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.557527+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:04.557596+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557678+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:04.557812+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:04.558524+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:04.572281+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:09:04.582005+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00aaa0"},"request_uri":"http://localhost:8000/_wdt/00aaa0","method":"GET"} []
[2022-07-27T12:09:04.582668+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:13.402858+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:13.403554+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:09:13.404967+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:13.405188+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:13.405376+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:13.405593+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.405630+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:13.405776+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.405829+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.405853+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:13.405914+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.405995+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:13.406116+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:13.406498+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:13.416280+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:09:13.427118+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"532356"},"request_uri":"http://localhost:8000/_wdt/532356","method":"GET"} []
[2022-07-27T12:09:13.427625+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:32.278804+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T12:09:32.279399+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T12:09:32.279433+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.287749+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:09:32.294726+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:09:32.777195+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.784380+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T12:09:32.784630+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:09:32.785712+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:32.785875+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:09:32.786000+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.786030+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:09:32.786144+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786190+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.786212+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:09:32.786268+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786339+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:09:32.786443+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:09:32.786850+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:09:32.792880+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:00.681315+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-27T12:10:00.681830+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:10:00.681869+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:00.681893+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:00.682298+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:00.682873+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:10:00.682940+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:10:00.684388+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:00.684687+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:00.685006+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:00.685365+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.685431+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:00.685678+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.685776+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.685823+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:00.685938+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.686097+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:00.686317+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:00.686920+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:00.694608+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:04.308658+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:04.309266+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:10:04.310441+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:04.310651+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:04.310827+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:04.311021+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.311053+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:04.311180+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311226+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.311257+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:04.311313+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311388+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:04.311495+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:04.311817+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:04.317629+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:04.328244+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c73f4f"},"request_uri":"http://localhost:8000/_wdt/c73f4f","method":"GET"} []
[2022-07-27T12:10:04.328644+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:12.206334+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-27T12:10:12.208731+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:10:12.208834+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:12.208912+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:10:12.209744+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:12.210729+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-27T12:10:12.210818+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-27T12:10:12.212560+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:12.212805+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:12.213054+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:12.213338+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.213389+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:12.213576+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.213649+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.213685+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:12.213772+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.213886+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:12.214051+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:12.214543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:12.220823+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:18.094892+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:10:18.095653+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T12:10:18.097515+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:10:18.097719+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:18.097911+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:10:18.098406+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.098467+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:10:18.098659+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.098733+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.098778+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:10:18.098862+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.098977+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:10:18.099134+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:10:18.099542+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:10:18.107698+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:10:18.118748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"12ee4f"},"request_uri":"http://localhost:8000/_wdt/12ee4f","method":"GET"} []
[2022-07-27T12:10:18.119266+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:17:18.629781+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:17:18.630360+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/api/login_check"" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/api/login_check\" at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-27T12:17:18.646286+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:17:18.646545+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:17:18.646756+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:17:18.647035+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.647090+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:17:18.647239+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647291+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.647316+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:17:18.647378+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647460+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:17:18.647582+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:17:18.647982+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:17:18.658831+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:18:52.988679+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2022-07-27T12:18:52.989108+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:18:52.989135+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:52.992424+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:18:52.992900+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:18:52.993452+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:52.993509+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:18:53.016345+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:18:53.017375+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:18:53.017509+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:18:53.017628+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.017658+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:18:53.017776+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.017831+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.017854+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:18:53.017912+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.017982+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:18:53.018101+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:18:53.018580+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:18:53.023483+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T12:19:57.731624+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-27T12:19:57.732783+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-27T12:19:57.732838+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.736272+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/data.db","charset":"utf8"}} []
[2022-07-27T12:19:57.736989+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T12:19:57.737316+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.737393+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-27T12:19:57.758320+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-27T12:19:57.782497+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-27T12:19:57.784257+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/GatewayIoT_backend/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T12:19:57.786139+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:19:57.786323+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T12:19:57.786548+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.786601+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T12:19:57.786800+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.786871+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.786919+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T12:19:57.787019+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.787152+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T12:19:57.787347+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T12:19:57.788032+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T12:19:57.794937+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:04:51.503537+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:04:51.520370+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-27T13:04:51.556234+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:04:51.561007+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:04:51.561803+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:04:51.568543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.568615+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:04:51.569420+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.569667+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.569704+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:04:51.569793+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.569902+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:04:51.570210+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:04:51.571885+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:04:51.599605+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:04:51.602851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f82978"},"request_uri":"http://localhost:8000/_wdt/f82978","method":"GET"} []
[2022-07-27T13:04:51.605684+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:28.406343+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T13:08:28.411655+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T13:08:28.411695+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.418828+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:08:28.426280+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T13:08:28.896928+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.904216+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:28.904474+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:28.905790+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:28.905959+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:28.906095+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.906129+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:08:28.906256+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906307+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.906331+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:08:28.906391+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906481+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:28.906610+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:08:28.907002+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:28.911047+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-27T13:08:31.212645+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-27T13:08:31.213066+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-27T13:08:31.213094+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.213849+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-27T13:08:31.214503+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-27T13:08:31.670498+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.673105+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-27T13:08:31.673410+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-27T13:08:31.674702+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:31.674856+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-27T13:08:31.674988+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.675022+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-27T13:08:31.675172+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675232+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.675257+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-27T13:08:31.675319+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675396+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-27T13:08:31.675513+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-27T13:08:31.675910+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-27T13:08:31.681043+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:14:05.689576+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-07-28T09:14:05.692018+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-07-28T09:14:05.692657+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-07-28T09:14:05.692892+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-07-28T09:33:56.050109+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:56.062787+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T09:33:56.099305+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:33:56.103684+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:56.104433+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:56.110466+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.110539+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:33:56.111441+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.111672+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.111713+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:33:56.111791+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.111873+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:56.112153+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:33:56.113635+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:56.140280+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:33:56.144975+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc28d8"},"request_uri":"http://localhost:8000/_wdt/bc28d8","method":"GET"} []
[2022-07-28T09:33:56.147691+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:59.921110+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:33:59.930069+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:33:59.930142+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:33:59.930170+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:33:59.931874+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:33:59.932460+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:33:59.932679+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:33:59.934616+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:33:59.934810+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:59.935003+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:33:59.935192+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.935222+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:33:59.935351+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935400+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.935423+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:33:59.935483+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935557+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:33:59.935681+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:33:59.936029+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:33:59.944163+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:34:07.138618+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:07.139451+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T09:34:07.140800+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:34:07.141000+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:07.141186+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:07.141410+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.141444+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:34:07.141592+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141645+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.141668+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:34:07.141727+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141811+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:07.141925+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:34:07.142269+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:07.150001+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:34:07.158115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"303c02"},"request_uri":"http://localhost:8000/_wdt/303c02","method":"GET"} []
[2022-07-28T09:34:07.158698+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:46.069471+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T09:34:46.071821+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:34:46.071858+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.074546+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.078978+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.079131+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:34:46.079361+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:34:46.080619+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:34:46.080791+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:46.080950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:34:46.081138+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.081169+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:34:46.081296+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081344+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.081366+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:34:46.081428+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081501+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:34:46.081607+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:34:46.081937+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:34:46.090408+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:35:03.443749+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-28T09:35:03.514666+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:35:03.514808+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:03.531811+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:35:03.538927+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T09:35:04.005731+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:04.017470+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:35:04.017792+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:35:04.019417+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:04.019632+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:04.019795+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.019837+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:35:04.020006+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020083+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.020111+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:35:04.020201+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020310+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:04.020459+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:35:04.020955+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:04.026021+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:35:27.265875+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T09:35:27.266316+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:35:27.266343+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.270269+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:35:27.270782+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T09:35:27.271380+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.271440+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:35:27.295974+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-28T09:35:27.305026+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-28T09:35:27.306088+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:35:27.307230+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:27.307352+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:35:27.307479+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.307509+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:35:27.307637+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307687+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.307710+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:35:27.307771+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307848+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:35:27.307961+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:35:27.308346+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:35:27.314293+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:36:54.985936+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:36:54.986498+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/gateways"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/gateways\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/gateways\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-28T09:36:55.006108+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:36:55.006348+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:36:55.006560+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:36:55.006851+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.006893+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:36:55.007046+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007099+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.007124+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:36:55.007183+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007266+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:36:55.007389+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:36:55.007776+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:36:55.017450+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:37.124396+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:37:37.124862+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:37:37.124904+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:37:37.124925+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:37:37.125420+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:37:37.126035+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:37:37.126085+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:37:37.127283+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:37:37.127480+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:37.127658+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:37.127864+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.127896+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:37:37.128021+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128069+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.128091+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:37:37.128147+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128227+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:37.128333+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:37:37.128663+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:37.137318+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:42.486504+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login","method":"GET"} []
[2022-07-28T09:37:42.487039+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:37:42.487089+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:37:42.487116+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:37:42.487352+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:37:42.487486+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:37:42.487933+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:37:42.492293+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:37:42.492467+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:42.492642+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:37:42.492838+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.492868+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:37:42.492992+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493038+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.493060+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:37:42.493112+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:37:42.493289+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:37:42.493617+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:37:42.505776+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:37:42.539454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff1d9b"},"request_uri":"http://localhost:8000/_wdt/ff1d9b","method":"GET"} []
[2022-07-28T09:37:42.540051+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:08.992786+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2022-07-28T09:38:08.993442+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:38:08.993481+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:08.993502+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:08.993897+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:08.994460+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:38:08.994502+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:38:08.995772+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:38:08.995956+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:08.996123+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:08.996320+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:08.996352+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:38:08.996477+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996534+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:08.996557+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:38:08.996613+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996685+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:08.996793+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:38:08.997128+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:09.005178+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:38:17.818431+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T09:38:17.818877+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T09:38:17.818914+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:17.818933+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T09:38:17.819271+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:38:17.819785+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T09:38:17.819826+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T09:38:17.820897+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:38:17.821118+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:17.821320+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:38:17.821554+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.821591+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:38:17.821737+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.821793+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.821819+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:38:17.821884+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.821973+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:38:17.822095+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:38:17.822480+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:38:17.828277+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:39:22.564722+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"GET"} []
[2022-07-28T09:39:22.565472+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:39:22.565509+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:22.565554+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:22.565806+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:39:22.565954+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:39:22.566459+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:39:22.571263+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:39:22.571519+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:22.571739+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:22.572024+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.572062+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:39:22.572245+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572301+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.572336+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:39:22.572397+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572476+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:22.572594+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:39:22.572975+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:22.583798+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:39:50.893805+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"GET"} []
[2022-07-28T09:39:50.894307+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T09:39:50.894342+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:50.894364+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T09:39:50.894603+02:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2022-07-28T09:39:50.894743+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:39:50.895255+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login". The route is wrongly configured." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login\". The route is wrongly configured. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/HttpKernel.php:140)"} []
[2022-07-28T09:39:50.901461+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:39:50.901701+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:50.901909+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:39:50.902147+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.902186+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:39:50.902340+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902397+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.902424+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:39:50.902489+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902574+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:39:50.902698+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:39:50.903366+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:39:50.914920+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:41:48.744495+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerRycR3DF/App_KernelDevDebugContainer.php","line":1414,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T09:41:48.745085+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/api/gateways"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/api/gateways\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/gateways\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-28T09:41:48.757509+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:41:48.757747+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:41:48.757953+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T09:41:48.758253+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.758290+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T09:41:48.758715+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.758799+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.758851+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T09:41:48.758924+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.759017+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T09:41:48.759157+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T09:41:48.759559+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T09:41:48.768551+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:44:48.374863+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T09:44:48.790267+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T09:45:55.086560+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:04:42.997976+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:22:22.041970+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:25:08.416099+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:26:43.677362+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:26:43.678929+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.679365+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.682157+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.682201+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.682660+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.682873+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.682910+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.682981+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.683068+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.683284+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:43.684332+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.684413+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.684478+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.684501+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.684567+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684606+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.684631+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.684664+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684729+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.684814+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:43.685343+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:43.685410+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685432+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.685495+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685531+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685549+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:43.685579+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685642+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:43.685669+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.685687+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('user') {"sql":"PRAGMA table_info('user')"} []
[2022-07-28T10:26:43.685744+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["user"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["user"],"types":[]} []
[2022-07-28T10:26:43.685998+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:43.686025+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('user') {"sql":"PRAGMA index_list('user')"} []
[2022-07-28T10:26:43.686063+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["user"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["user"],"types":[]} []
[2022-07-28T10:26:43.686125+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_INDEX_INFO (?) (parameters: array["UNIQ_8D93D649E7927C74"], types: array[]) {"sql":"SELECT * FROM PRAGMA_INDEX_INFO (?)","params":["UNIQ_8D93D649E7927C74"],"types":[]} []
[2022-07-28T10:26:43.686188+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["user"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["user"],"types":[]} []
[2022-07-28T10:26:43.697700+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:26:50.985650+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:26:50.986774+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.774231+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:26:51.784262+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.784390+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:26:51.785329+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.785701+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:26:51.785769+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:26:51.785894+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.786049+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:26:51.788161+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.788430+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.788525+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:26:51.790600+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-07-28T10:26:51.798314+02:00] doctrine.DEBUG: Executing query: CREATE TABLE gateway (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL, pulling_period INTEGER NOT NULL, pushing_period INTEGER NOT NULL, host VARCHAR(255) NOT NULL, port INTEGER NOT NULL, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, use_tls INTEGER NOT NULL, topic VARCHAR(255) NOT NULL, log_file VARCHAR(255) NOT NULL, backup_file VARCHAR(255) NOT NULL, hw_model VARCHAR(255) NOT NULL, sw_version VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, board_serial_number VARCHAR(255) NOT NULL, asset_id VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE gateway (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL, pulling_period INTEGER NOT NULL, pushing_period INTEGER NOT NULL, host VARCHAR(255) NOT NULL, port INTEGER NOT NULL, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, use_tls INTEGER NOT NULL, topic VARCHAR(255) NOT NULL, log_file VARCHAR(255) NOT NULL, backup_file VARCHAR(255) NOT NULL, hw_model VARCHAR(255) NOT NULL, sw_version VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, board_serial_number VARCHAR(255) NOT NULL, asset_id VARCHAR(255) NOT NULL)"} []
[2022-07-28T10:26:51.798597+02:00] doctrine.DEBUG: Executing query: CREATE TABLE meter (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, node_id INTEGER NOT NULL, name VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, manufacturer VARCHAR(255) NOT NULL, method VARCHAR(255) NOT NULL, port VARCHAR(255) NOT NULL, baudrate INTEGER NOT NULL, token VARCHAR(255) NOT NULL) {"sql":"CREATE TABLE meter (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, node_id INTEGER NOT NULL, name VARCHAR(255) NOT NULL, serial_number VARCHAR(255) NOT NULL, manufacturer VARCHAR(255) NOT NULL, method VARCHAR(255) NOT NULL, port VARCHAR(255) NOT NULL, baudrate INTEGER NOT NULL, token VARCHAR(255) NOT NULL)"} []
[2022-07-28T10:26:51.798833+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220728082643","2":"2022-07-28 10:26:51","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220728082643","2":"2022-07-28 10:26:51","3":8},"types":{"1":2,"2":2,"3":1}} []
[2022-07-28T10:26:51.798987+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-07-28T10:26:51.808315+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:38.706303+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:38.756804+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T10:27:38.765535+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:38.765583+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:38.765605+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:38.769042+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:38.775729+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:38.775944+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:38.790590+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:38.791369+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:38.795106+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.795181+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:38.796176+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796433+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.796477+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:38.796563+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796673+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:38.796966+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:38.798902+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:38.818658+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:39.702214+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2022-07-28T10:27:39.703038+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:39.703132+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:39.703194+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:39.704140+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:39.705375+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:39.705498+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:39.708730+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:39.709016+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:39.709376+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:39.709661+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.709750+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:39.709993+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710096+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.710148+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:39.710277+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710469+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:39.710784+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:39.711589+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:39.718761+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:41.902998+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:41.905099+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-28T10:27:41.910021+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:41.910496+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:41.910940+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:41.911459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.911552+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:41.911773+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.911844+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.911876+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:41.911973+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.912104+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:41.912279+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:41.912785+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:41.920707+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:27:41.927434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"72d300"},"request_uri":"http://localhost:8000/_wdt/72d300","method":"GET"} []
[2022-07-28T10:27:41.929123+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:58.939434+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:27:58.940528+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:27:58.940567+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:58.940587+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:27:58.940980+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:27:58.941500+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:27:58.941599+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:27:58.943715+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:27:58.944008+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:58.944304+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:27:58.944632+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.944700+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:27:58.944919+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.944983+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.945008+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:27:58.945068+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.945147+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:27:58.945270+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:27:58.945771+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:27:58.953204+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:05.845287+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:05.845775+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:05.845803+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:05.845830+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:05.846145+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:05.846608+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:37:05.846651+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:37:05.848006+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:05.848239+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:05.848430+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:05.848722+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.848764+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:05.848930+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.848993+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.849016+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:05.849080+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.849152+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:05.849261+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:05.849663+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:05.855163+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:29.672375+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:29.672829+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:29.672857+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.674887+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675603+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675725+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:29.675926+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:29.677128+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:29.677303+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:29.677480+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:29.677670+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.677702+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:29.677829+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.677876+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.677897+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:29.677951+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.678021+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:29.678126+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:29.678466+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:29.683704+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:32.249313+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:32.250252+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:32.250493+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.250720+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251299+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251331+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:32.251564+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:32.253524+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:32.253742+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:32.253950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:32.254215+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.254257+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:32.254401+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254463+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.254488+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:32.254549+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254629+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:32.254749+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:32.255174+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:32.260467+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:35.747440+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-28T10:37:35.749235+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T10:37:35.749275+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:35.751361+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:35.757496+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T10:37:36.192009+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:36.197106+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T10:37:36.197338+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:36.198413+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:36.198574+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:36.198687+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.198716+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:36.198875+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.198935+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.198957+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:36.199013+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.199086+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:36.199194+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:36.199572+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:36.204007+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:37:49.307666+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:37:49.308367+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:37:49.308409+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.311499+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:37:49.311979+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T10:37:49.312579+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.312633+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:37:49.338413+02:00] doctrine.DEBUG: Executing query: SELECT g0_.id AS id_0, g0_.name AS name_1, g0_.location AS location_2, g0_.pulling_period AS pulling_period_3, g0_.pushing_period AS pushing_period_4, g0_.host AS host_5, g0_.port AS port_6, g0_.username AS username_7, g0_.password AS password_8, g0_.use_tls AS use_tls_9, g0_.topic AS topic_10, g0_.log_file AS log_file_11, g0_.backup_file AS backup_file_12, g0_.hw_model AS hw_model_13, g0_.sw_version AS sw_version_14, g0_.serial_number AS serial_number_15, g0_.board_serial_number AS board_serial_number_16, g0_.asset_id AS asset_id_17 FROM gateway g0_ ORDER BY g0_.id ASC LIMIT 30 {"sql":"SELECT g0_.id AS id_0, g0_.name AS name_1, g0_.location AS location_2, g0_.pulling_period AS pulling_period_3, g0_.pushing_period AS pushing_period_4, g0_.host AS host_5, g0_.port AS port_6, g0_.username AS username_7, g0_.password AS password_8, g0_.use_tls AS use_tls_9, g0_.topic AS topic_10, g0_.log_file AS log_file_11, g0_.backup_file AS backup_file_12, g0_.hw_model AS hw_model_13, g0_.sw_version AS sw_version_14, g0_.serial_number AS serial_number_15, g0_.board_serial_number AS board_serial_number_16, g0_.asset_id AS asset_id_17 FROM gateway g0_ ORDER BY g0_.id ASC LIMIT 30"} []
[2022-07-28T10:37:49.340443+02:00] doctrine.DEBUG: Executing query: SELECT count(g0_.id) AS sclr_0 FROM gateway g0_ {"sql":"SELECT count(g0_.id) AS sclr_0 FROM gateway g0_"} []
[2022-07-28T10:37:49.341340+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:37:49.342523+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:49.342632+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:37:49.342773+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.342821+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:37:49.342964+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343010+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.343032+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:37:49.343088+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343158+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:37:49.343265+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:37:49.343704+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:37:49.349973+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:38:40.623105+02:00] request.INFO: Matched route "api_gateways_get_collection". {"route":"api_gateways_get_collection","route_parameters":{"_route":"api_gateways_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Gateway","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/gateways","method":"GET"} []
[2022-07-28T10:38:40.623812+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:38:40.623845+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:38:40.623879+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:38:40.624209+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:38:40.624628+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:38:40.624668+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:38:40.625754+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:38:40.625937+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:38:40.626120+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:38:40.626343+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.626375+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:38:40.626504+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626551+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.626575+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:38:40.626638+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626711+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:38:40.626857+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:38:40.627225+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:38:40.633137+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:00.268457+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:00.290262+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:00.291334+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:00.291367+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:00.291385+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:00.315431+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerQ0vUGBI/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:00.316759+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:00.316980+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:00.317112+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.317142+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:00.317282+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317329+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.317351+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:00.317406+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317477+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:00.317585+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:00.318272+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:00.329064+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:00.431735+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1653fc"},"request_uri":"http://localhost:8000/_wdt/1653fc","method":"GET"} []
[2022-07-28T10:42:00.432301+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerQ0vUGBI/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:24.819402+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:24.842700+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:24.843794+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:24.843824+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:24.843841+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:24.844317+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:24.844863+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:42:24.844899+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:42:24.846629+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:24.846873+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:24.847011+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.847042+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:24.847182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847236+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.847260+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:24.847316+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847389+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:24.847498+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:24.848144+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:24.858040+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:39.316283+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:39.340201+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:42:39.341048+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:39.341080+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:39.341100+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:39.361655+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:39.363113+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:39.363362+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:39.363499+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.363533+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:39.363687+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.363739+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.363763+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:39.363824+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.363903+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:39.364023+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:39.364760+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:39.375499+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:42:39.479025+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"95410a"},"request_uri":"http://localhost:8000/_wdt/95410a","method":"GET"} []
[2022-07-28T10:42:39.479482+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:55.561672+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?page=1","method":"GET"} []
[2022-07-28T10:42:55.563113+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:42:55.563147+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:55.563164+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:42:55.564360+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:42:55.572522+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-28T10:42:55.578204+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-28T10:42:55.578604+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerHMzApxx/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:42:55.580207+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:55.580322+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:42:55.580441+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.580471+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:42:55.580612+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580665+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.580687+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:42:55.580743+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580813+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:42:55.580918+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:42:55.581334+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:42:55.588294+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:43:17.107097+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:43:17.129637+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T10:43:17.130422+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:43:17.130455+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:17.130473+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:17.151869+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:17.153473+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:17.153720+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:17.153861+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.153893+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:43:17.154051+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154107+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.154133+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:43:17.154196+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154277+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:17.154429+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:43:17.156048+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:17.166116+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T10:43:17.279883+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eadc85"},"request_uri":"http://localhost:8000/_wdt/eadc85","method":"GET"} []
[2022-07-28T10:43:17.280327+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:21.057943+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?page=1","method":"GET"} []
[2022-07-28T10:43:21.059250+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T10:43:21.059282+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:21.059300+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T10:43:21.059955+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerCRIHKju/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T10:43:21.060576+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T10:43:21.060618+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T10:43:21.062143+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T10:43:21.062454+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:21.062645+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T10:43:21.062918+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.062976+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T10:43:21.063116+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063164+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.063187+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T10:43:21.063243+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063317+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T10:43:21.063428+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T10:43:21.063790+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T10:43:21.071595+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T12:05:21.155650+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T12:05:21.179957+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T12:05:21.180683+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T12:05:21.180718+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:21.180986+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:21.181576+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:21.181613+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:21.181806+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T12:05:21.184153+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:21.184367+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:21.184494+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:21.184524+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T12:05:21.184663+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:21.184713+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:21.184735+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T12:05:21.184791+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:21.184864+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:21.184980+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T12:05:21.185635+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:21.195601+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T12:05:33.728093+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"POST"} []
[2022-07-28T12:05:33.729484+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-07-28T12:05:33.729516+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T12:05:33.730588+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T12:05:33.731433+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T12:05:34.191313+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T12:05:34.194868+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-07-28T12:05:34.195147+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T12:05:34.197136+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:34.197276+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:34.197406+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:34.197437+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T12:05:34.197557+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:34.197604+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:34.197625+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T12:05:34.197681+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:34.197752+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:34.197867+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T12:05:34.198285+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:34.203171+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T12:05:51.950884+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-07-28T12:05:51.951894+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T12:05:51.951925+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:51.953779+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T12:05:51.954251+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-07-28T12:05:51.954511+02:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:51.954596+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T12:05:51.962616+02:00] doctrine.DEBUG: Executing query: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 {"sql":"SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30"} []
[2022-07-28T12:05:51.967980+02:00] doctrine.DEBUG: Executing query: SELECT count(u0_.id) AS sclr_0 FROM user u0_ {"sql":"SELECT count(u0_.id) AS sclr_0 FROM user u0_"} []
[2022-07-28T12:05:51.968367+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerMjDnJcP/App_KernelDevDebugContainer.php","line":1418,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T12:05:51.969460+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:51.969568+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T12:05:51.969683+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:51.969712+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T12:05:51.969828+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:51.969876+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:51.969899+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T12:05:51.969955+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:51.970032+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T12:05:51.970139+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T12:05:51.970568+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T12:05:51.976970+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T16:29:42.657109+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T16:29:43.128059+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:12:50.414360+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T17:12:50.438148+02:00] request.INFO: Matched route "api_meters_get_collection". {"route":"api_meters_get_collection","route_parameters":{"_route":"api_meters_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\Meter","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/meters","method":"GET"} []
[2022-07-28T17:12:50.439030+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-07-28T17:12:50.439065+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T17:12:50.439085+02:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-07-28T17:12:50.440100+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:12:50.440887+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2022-07-28T17:12:50.440947+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2022-07-28T17:12:50.442934+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:12:50.443234+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:12:50.443370+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:50.443402+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T17:12:50.443558+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:50.443608+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:50.443631+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T17:12:50.443688+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:50.443762+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:50.443880+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T17:12:50.444963+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:50.454722+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:12:54.945422+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:12:54.946398+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/test/2"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/test/2\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/test/2/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-28T17:12:54.963180+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T17:12:54.963525+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:12:54.963721+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:12:54.963971+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:54.964004+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T17:12:54.964138+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:54.964186+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:54.964208+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T17:12:54.964265+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:54.964347+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:12:54.964466+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T17:12:54.964832+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:12:54.977291+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:12:55.243909+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"803726"},"request_uri":"http://localhost:8000/_wdt/803726","method":"GET"} []
[2022-07-28T17:12:55.244670+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:22.275154+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T17:13:22.297763+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:13:22.298571+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-28T17:13:22.299173+02:00] php.CRITICAL: Uncaught Error: Class "App\Controller\Meter" not found {"exception":"[object] (Error(code: 0): Class \"App\\Controller\\Meter\" not found at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:22.326363+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:22.327042+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Meter" from namespace "App\Controller". Did you forget a "use" statement for "App\Entity\Meter"?" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 20 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Meter\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"App\\Entity\\Meter\"? at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:22.333034+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:22.333289+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:22.333440+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.333475+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T17:13:22.333632+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.333686+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.333714+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T17:13:22.333774+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.333856+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.334191+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T17:13:22.335059+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.356740+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:13:22.361875+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"006927"},"request_uri":"http://localhost:8000/_wdt/006927","method":"GET"} []
[2022-07-28T17:13:22.362520+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:22.712055+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:13:22.713320+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-28T17:13:22.714691+02:00] php.CRITICAL: Uncaught Error: Class "App\Controller\Meter" not found {"exception":"[object] (Error(code: 0): Class \"App\\Controller\\Meter\" not found at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:22.743694+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:22.744249+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Meter" from namespace "App\Controller". Did you forget a "use" statement for "App\Entity\Meter"?" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 20 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Meter\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"App\\Entity\\Meter\"? at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:22.748796+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T17:13:22.749002+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:22.749193+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:22.749352+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.749385+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T17:13:22.749501+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.749551+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.749574+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T17:13:22.749631+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.749708+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:22.749818+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T17:13:22.750215+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:22.764267+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:13:22.773922+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"740632"},"request_uri":"http://localhost:8000/_wdt/740632","method":"GET"} []
[2022-07-28T17:13:22.774840+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:23.408436+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:13:23.409766+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-28T17:13:23.411370+02:00] php.CRITICAL: Uncaught Error: Class "App\Controller\Meter" not found {"exception":"[object] (Error(code: 0): Class \"App\\Controller\\Meter\" not found at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:23.441217+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:23.441801+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Meter" from namespace "App\Controller". Did you forget a "use" statement for "App\Entity\Meter"?" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 20 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Meter\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"App\\Entity\\Meter\"? at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:20)"} []
[2022-07-28T17:13:23.446865+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-28T17:13:23.447079+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:23.447264+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-28T17:13:23.447401+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:23.447431+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-28T17:13:23.447540+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:23.447588+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:23.447610+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-28T17:13:23.447663+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:23.447745+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-28T17:13:23.447850+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-28T17:13:23.448191+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-28T17:13:23.461669+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-28T17:13:23.469057+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef5f99"},"request_uri":"http://localhost:8000/_wdt/ef5f99","method":"GET"} []
[2022-07-28T17:13:23.469642+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-28T17:13:35.597055+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:13:35.597862+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-28T17:25:39.520038+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:25:39.520436+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-28T17:25:56.153407+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-28T17:25:56.153887+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T11:16:55.848997+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T11:16:55.868418+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-29T11:16:55.907600+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T11:16:55.913473+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T11:16:55.914999+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T11:16:55.926148+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:16:55.926304+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T11:16:55.927837+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:16:55.928160+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:16:55.928216+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T11:16:55.928313+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:16:55.928430+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:16:55.928962+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T11:16:55.932644+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:16:55.965610+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T11:16:55.970303+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"97b3a6"},"request_uri":"http://localhost:8000/_wdt/97b3a6","method":"GET"} []
[2022-07-29T11:16:55.973433+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T11:17:00.783109+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T11:17:00.784075+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/test"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/test\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/test/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-29T11:17:00.809050+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T11:17:00.809281+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T11:17:00.809515+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T11:17:00.809777+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:17:00.809818+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T11:17:00.810217+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:17:00.810304+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:17:00.810333+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T11:17:00.810416+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:17:00.810535+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T11:17:00.810690+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T11:17:00.811245+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T11:17:00.822831+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T11:17:00.866233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"38ebcc"},"request_uri":"http://localhost:8000/_wdt/38ebcc","method":"GET"} []
[2022-07-29T11:17:00.866670+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T11:17:08.826028+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index","id":"2"},"request_uri":"http://localhost:8000/test/2","method":"GET"} []
[2022-07-29T11:17:08.830428+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T12:04:57.737299+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T12:04:57.772113+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T12:04:57.773035+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/test/2"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/test/2\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/test/2/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-07-29T12:04:57.790844+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T12:04:57.791119+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T12:04:57.791295+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T12:04:57.791347+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T12:04:57.791536+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T12:04:57.791599+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T12:04:57.791628+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T12:04:57.791697+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T12:04:57.791800+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T12:04:57.791938+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T12:04:57.792709+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T12:04:57.811188+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T12:04:57.818776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"12f44b"},"request_uri":"http://localhost:8000/_wdt/12f44b","method":"GET"} []
[2022-07-29T12:04:57.819215+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T12:05:00.871186+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T12:05:00.871983+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T12:06:04.883690+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T12:06:04.884036+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T12:06:06.104749+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T12:06:06.105817+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T12:06:26.008299+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T12:06:26.009739+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T12:07:51.053587+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T12:07:51.054388+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:26:22.213881+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:26:22.240525+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:26:22.241104+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:26:22.241661+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:26:22.244334+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:26:22.244593+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:26:22.244770+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:22.244811+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:26:22.244987+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:22.245052+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:22.245080+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:26:22.245149+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:22.245243+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:22.245384+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:26:22.246242+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:22.260075+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:26:37.812787+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:26:37.813640+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:26:37.814394+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:26:37.815036+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined property: App\Controller\TestController::$jsonFile" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 48 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined property: App\\Controller\\TestController::$jsonFile at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:48)"} []
[2022-07-29T14:26:37.822790+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:26:37.823149+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:26:37.823370+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:26:37.823616+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:37.823649+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:26:37.823795+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:37.823845+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:37.823867+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:26:37.823923+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:37.823995+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:26:37.824106+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:26:37.824487+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:26:37.838239+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:26:37.846968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a26ee0"},"request_uri":"http://localhost:8000/_wdt/a26ee0","method":"GET"} []
[2022-07-29T14:26:37.847593+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:27:49.678896+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:27:49.679203+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:27:49.679664+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:27:49.680806+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined property: App\Controller\TestController::$jsonFile" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 50 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined property: App\\Controller\\TestController::$jsonFile at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:50)"} []
[2022-07-29T14:27:49.687314+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:27:49.687567+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:27:49.687750+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:27:49.687986+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:27:49.688018+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:27:49.688145+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:27:49.688192+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:27:49.688213+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:27:49.688264+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:27:49.688334+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:27:49.688442+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:27:49.688844+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:27:49.705034+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:27:49.712076+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e804d"},"request_uri":"http://localhost:8000/_wdt/3e804d","method":"GET"} []
[2022-07-29T14:27:49.712448+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:32:35.150698+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:32:35.170398+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:32:35.170917+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:32:35.172484+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:33:00.907521+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:00.908327+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:01.573590+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:01.574152+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:02.347726+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:02.348151+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:02.524980+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:02.525526+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:03.032384+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:03.033235+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:03.174618+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:03.175320+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:03.351807+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:03.352589+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:06.921300+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:33:06.922186+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-07-29T14:33:06.924250+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:33:06.924725+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:33:06.925041+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:33:06.925372+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:33:06.925428+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:33:06.925622+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:33:06.925691+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:33:06.925722+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:33:06.925797+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:33:06.925919+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:33:06.926071+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:33:06.926521+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:33:06.937425+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:33:06.948400+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6894f7"},"request_uri":"http://localhost:8000/_wdt/6894f7","method":"GET"} []
[2022-07-29T14:33:06.949079+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:33:16.782043+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:16.782517+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:33:32.902126+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:33:32.902541+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:34:31.944134+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:34:31.944486+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:35:10.252116+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:35:10.252489+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:35:10.253060+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:35:10.253569+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined property: App\Controller\TestController::$jsonFile" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 50 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined property: App\\Controller\\TestController::$jsonFile at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:50)"} []
[2022-07-29T14:35:10.260006+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:35:10.260410+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:35:10.260822+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:35:10.261258+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:35:10.261311+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:35:10.261523+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:35:10.261604+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:35:10.261646+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:35:10.261720+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:35:10.261837+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:35:10.262415+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:35:10.262966+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:35:10.275894+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:35:10.285053+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6c6d2"},"request_uri":"http://localhost:8000/_wdt/f6c6d2","method":"GET"} []
[2022-07-29T14:35:10.285412+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:36:30.362002+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:36:30.362363+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:36:30.362857+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:36:30.363482+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined property: App\Controller\TestController::$jsonFile" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 51 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined property: App\\Controller\\TestController::$jsonFile at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:51)"} []
[2022-07-29T14:36:30.369134+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:36:30.369365+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:36:30.369543+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:36:30.369773+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:36:30.369810+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:36:30.369967+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:36:30.370025+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:36:30.370047+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:36:30.370102+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:36:30.370173+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:36:30.370283+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:36:30.370673+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:36:30.388271+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:36:30.400812+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"127676"},"request_uri":"http://localhost:8000/_wdt/127676","method":"GET"} []
[2022-07-29T14:36:30.401212+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:38:08.426778+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:38:08.427143+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:38:08.427639+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:38:08.428105+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "id"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 56 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"id\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:56)"} []
[2022-07-29T14:38:08.433460+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:38:08.433685+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:38:08.433911+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:38:08.434219+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:08.434266+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:38:08.434749+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:08.434846+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:08.434881+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:38:08.434969+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:08.435086+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:08.435261+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:38:08.435729+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:08.452157+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:38:08.464709+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35f599"},"request_uri":"http://localhost:8000/_wdt/35f599","method":"GET"} []
[2022-07-29T14:38:08.465410+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:38:49.306401+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:38:49.306732+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:38:49.307217+02:00] php.CRITICAL: Uncaught Error: App\Controller\TestController::getRows(): Return value must be of type Symfony\Component\HttpFoundation\Response, array returned {"exception":"[object] (TypeError(code: 0): App\\Controller\\TestController::getRows(): Return value must be of type Symfony\\Component\\HttpFoundation\\Response, array returned at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:56)"} []
[2022-07-29T14:38:49.308241+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:38:49.308715+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "App\Controller\TestController::getRows(): Return value must be of type Symfony\Component\HttpFoundation\Response, array returned" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 56 {"exception":"[object] (TypeError(code: 0): App\\Controller\\TestController::getRows(): Return value must be of type Symfony\\Component\\HttpFoundation\\Response, array returned at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:56)"} []
[2022-07-29T14:38:49.314140+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:38:49.314351+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:38:49.314559+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:38:49.314808+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:49.314841+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:38:49.314975+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:49.315024+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:49.315047+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:38:49.315103+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:49.315178+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:38:49.315299+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:38:49.315686+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:38:49.331772+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:38:49.337610+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"423170"},"request_uri":"http://localhost:8000/_wdt/423170","method":"GET"} []
[2022-07-29T14:38:49.338122+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:39:33.071166+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:39:33.071526+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:39:33.071968+02:00] php.CRITICAL: Uncaught Error: Symfony\Component\HttpFoundation\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 56 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\HttpFoundation\\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 56 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php:215)"} []
[2022-07-29T14:39:33.072112+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:39:33.072580+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Symfony\Component\HttpFoundation\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 56" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php line 215 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\HttpFoundation\\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 56 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php:215)"} []
[2022-07-29T14:39:33.079796+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:39:33.080025+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:39:33.080206+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:39:33.080495+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:39:33.080546+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:39:33.080695+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:39:33.080746+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:39:33.080770+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:39:33.080939+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:39:33.081038+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:39:33.081295+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:39:33.082189+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:39:33.098855+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:39:33.113367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36ba4a"},"request_uri":"http://localhost:8000/_wdt/36ba4a","method":"GET"} []
[2022-07-29T14:39:33.114062+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:40:10.175231+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:40:10.200468+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:40:10.201067+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:40:10.202137+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:40:10.202723+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException: "The controller must return a "Symfony\Component\HttpFoundation\Response" object but it returned an array ([0 => ..., 1 => ..., 2 => ...])." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 59 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\ControllerDoesNotReturnResponseException(code: 0): The controller must return a \"Symfony\\Component\\HttpFoundation\\Response\" object but it returned an array ([0 => ..., 1 => ..., 2 => ...]). at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:59)"} []
[2022-07-29T14:40:10.208614+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:40:10.208882+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:40:10.209020+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.209050+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:40:10.209197+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.209261+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.209284+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:40:10.209342+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.209418+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.209540+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:40:10.210333+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.229648+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:40:10.235658+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae20ab"},"request_uri":"http://localhost:8000/_wdt/ae20ab","method":"GET"} []
[2022-07-29T14:40:10.236149+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:40:10.714539+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:40:10.715594+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:40:10.717433+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:40:10.718367+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException: "The controller must return a "Symfony\Component\HttpFoundation\Response" object but it returned an array ([0 => ..., 1 => ..., 2 => ...])." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 59 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\ControllerDoesNotReturnResponseException(code: 0): The controller must return a \"Symfony\\Component\\HttpFoundation\\Response\" object but it returned an array ([0 => ..., 1 => ..., 2 => ...]). at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:59)"} []
[2022-07-29T14:40:10.725055+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:40:10.725273+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:40:10.725460+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:40:10.725611+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.725645+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:40:10.725779+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.725860+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.725887+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:40:10.726069+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.726348+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:40:10.726506+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:40:10.726925+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:40:10.740216+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:40:10.751240+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be39f2"},"request_uri":"http://localhost:8000/_wdt/be39f2","method":"GET"} []
[2022-07-29T14:40:10.751747+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:41:11.896973+02:00] request.INFO: Matched route "app_test_getrows". {"route":"app_test_getrows","route_parameters":{"_route":"app_test_getrows","_controller":"App\\Controller\\TestController::getRows"},"request_uri":"http://localhost:8000/a","method":"GET"} []
[2022-07-29T14:41:11.898183+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:43:22.384534+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:43:22.385399+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:43:25.975885+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/test","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"app_test_index"},"request_uri":"http://localhost:8000/test/","method":"GET"} []
[2022-07-29T14:43:25.976347+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:43:25.978408+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:43:25.981036+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:43:25.981458+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:43:25.981699+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:43:25.982002+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:25.982044+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:43:25.982213+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:25.982266+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:25.982291+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:43:25.982351+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:25.982433+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:25.982551+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:43:25.982942+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:25.990801+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:43:25.993822+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-07-29T14:43:25.994121+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:43:31.467569+02:00] request.INFO: Matched route "app_test_getsingle". {"route":"app_test_getsingle","route_parameters":{"_route":"app_test_getsingle","_controller":"App\\Controller\\TestController::getSingle","id":"1"},"request_uri":"http://localhost:8000/test/1","method":"GET"} []
[2022-07-29T14:43:31.467933+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:43:31.468591+02:00] php.CRITICAL: Uncaught Error: array_filter(): Argument #1 ($array) must be of type array, null given {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:43:31.468751+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:43:31.469242+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "array_filter(): Argument #1 ($array) must be of type array, null given" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 69 {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:43:31.477140+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:43:31.477352+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:43:31.477547+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:43:31.477749+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:31.477782+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:43:31.477948+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:31.478018+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:31.478044+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:43:31.478101+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:31.478178+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:43:31.478293+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:43:31.478695+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:43:31.494437+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:43:31.504343+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"59e6a2"},"request_uri":"http://localhost:8000/_wdt/59e6a2","method":"GET"} []
[2022-07-29T14:43:31.505439+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:44:06.515144+02:00] request.INFO: Matched route "app_test_getsingle". {"route":"app_test_getsingle","route_parameters":{"_route":"app_test_getsingle","_controller":"App\\Controller\\TestController::getSingle","id":"1"},"request_uri":"http://localhost:8000/test/1","method":"GET"} []
[2022-07-29T14:44:06.515562+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:44:06.516120+02:00] php.CRITICAL: Uncaught Error: array_filter(): Argument #1 ($array) must be of type array, null given {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:44:06.516301+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:44:06.516898+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "array_filter(): Argument #1 ($array) must be of type array, null given" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 69 {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:44:06.524606+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:44:06.524877+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:44:06.525066+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:44:06.525313+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:44:06.525346+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:44:06.525482+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:44:06.525532+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:44:06.525555+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:44:06.525612+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:44:06.525690+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:44:06.525798+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:44:06.526268+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:44:06.543924+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:44:06.555233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e55313"},"request_uri":"http://localhost:8000/_wdt/e55313","method":"GET"} []
[2022-07-29T14:44:06.555920+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:47:30.591264+02:00] request.INFO: Matched route "app_test_getsingle". {"route":"app_test_getsingle","route_parameters":{"_route":"app_test_getsingle","_controller":"App\\Controller\\TestController::getSingle","id":"1"},"request_uri":"http://localhost:8000/test/1","method":"GET"} []
[2022-07-29T14:47:30.591662+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-29T14:47:30.592628+02:00] php.CRITICAL: Uncaught Error: array_filter(): Argument #1 ($array) must be of type array, null given {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:47:30.592839+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-07-29T14:47:30.593445+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "array_filter(): Argument #1 ($array) must be of type array, null given" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 69 {"exception":"[object] (TypeError(code: 0): array_filter(): Argument #1 ($array) must be of type array, null given at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:69)"} []
[2022-07-29T14:47:30.600814+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-07-29T14:47:30.601084+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:47:30.601265+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-07-29T14:47:30.601507+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:47:30.601537+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-07-29T14:47:30.601663+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:47:30.601708+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:47:30.601729+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-07-29T14:47:30.601782+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:47:30.601878+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-07-29T14:47:30.602075+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-29T14:47:30.602727+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-07-29T14:47:30.617746+02:00] doctrine.INFO: Disconnecting [] []
[2022-07-29T14:47:30.626410+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae69eb"},"request_uri":"http://localhost:8000/_wdt/ae69eb","method":"GET"} []
[2022-07-29T14:47:30.626861+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T11:34:20.781034+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T11:34:20.854724+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T11:34:20.861618+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2022-08-01T11:34:20.879794+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T11:34:20.881185+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T11:34:20.888737+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T11:34:20.888871+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T11:34:20.890306+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T11:34:20.890729+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T11:34:20.890794+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T11:34:20.891203+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T11:34:20.891375+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T11:34:20.891935+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T11:34:20.895201+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T11:34:20.918909+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T11:34:20.928927+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ce82f"},"request_uri":"http://localhost:8000/_wdt/2ce82f","method":"GET"} []
[2022-08-01T11:34:20.930551+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T11:34:46.355081+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:34:46.356116+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:36:57.362745+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:36:57.363354+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:51:53.689472+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:51:53.689797+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:52:50.509024+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:52:50.509353+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:55:04.172401+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:55:04.172731+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:56:10.776003+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:56:10.776328+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T11:57:20.714682+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T11:57:20.715070+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T12:05:01.315729+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T12:05:01.316147+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T12:05:56.755862+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T12:05:56.756194+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:20:51.735475+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:20:51.735861+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:22:02.328690+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:22:02.329326+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:22:07.034026+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:22:07.034650+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:24:20.802854+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:24:20.803182+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:29:39.325939+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:29:39.326377+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:29:39.327047+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:29:39.330300+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:29:39.330707+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:29:39.331000+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:29:39.331406+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:29:39.331468+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:29:39.331673+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:29:39.331749+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:29:39.331787+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:29:39.331872+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:29:39.332003+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:29:39.332240+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:29:39.332870+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:29:39.343021+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:31:03.811330+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:31:03.811688+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:31:03.812260+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:31:03.814517+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:31:03.814761+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:31:03.814964+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:31:03.815213+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:31:03.815247+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:31:03.815388+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:31:03.815439+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:31:03.815464+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:31:03.815522+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:31:03.815599+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:31:03.815721+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:31:03.816115+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:31:03.823921+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:37:05.069063+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:37:05.069476+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:37:05.070538+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:37:05.073462+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:37:05.073835+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:37:05.074069+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:37:05.074370+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:05.074408+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:37:05.074578+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:05.074639+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:05.074664+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:37:05.074735+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:05.074817+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:05.074950+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:37:05.075451+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:05.083391+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:37:50.479524+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:37:50.479870+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:37:50.480461+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:37:50.482886+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:37:50.483123+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:37:50.483306+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:37:50.483540+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:50.483572+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:37:50.483714+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:50.483769+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:50.483792+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:37:50.483848+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:50.483920+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:37:50.484067+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:37:50.484960+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:37:50.493451+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:38:17.711101+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:38:17.711436+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:38:17.712004+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:38:17.714216+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:38:17.714469+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:38:17.714663+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:38:17.714902+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:38:17.714935+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:38:17.715072+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:38:17.715122+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:38:17.715144+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:38:17.715197+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:38:17.715268+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:38:17.715375+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:38:17.715760+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:38:17.723227+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:39:49.471785+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:39:49.472120+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:39:49.472709+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:39:49.475321+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:39:49.475604+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:39:49.475811+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:39:49.476075+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:39:49.476108+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:39:49.476244+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:39:49.476298+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:39:49.476320+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:39:49.476376+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:39:49.476449+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:39:49.476570+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:39:49.476989+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:39:49.485580+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:40:05.461796+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:40:05.462166+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:40:05.462929+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:40:05.466149+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:40:05.466466+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:40:05.466721+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:40:05.467009+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:40:05.467046+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:40:05.467199+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:40:05.467255+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:40:05.467282+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:40:05.467352+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:40:05.467431+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:40:05.467558+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:40:05.467976+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:40:05.475355+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:41:08.748962+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:41:08.749333+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:41:08.750244+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:41:08.752523+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:41:08.752767+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:41:08.753014+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:41:08.753288+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:08.753324+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:41:08.753471+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:08.753524+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:08.753557+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:41:08.753620+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:08.753703+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:08.753850+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:41:08.754262+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:08.760350+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:41:27.322657+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:41:27.323008+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:41:27.323606+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:41:27.326566+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:41:27.327135+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:41:27.327456+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:41:27.327784+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:27.327849+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:41:27.328072+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:27.328135+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:27.328162+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:41:27.328231+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:27.328334+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:41:27.328505+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:41:27.329084+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:41:27.336318+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:46:55.714372+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:46:55.714754+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:46:55.715394+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:46:55.717536+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:46:55.717787+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:46:55.717997+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:46:55.718291+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:46:55.718331+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:46:55.718490+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:46:55.718545+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:46:55.718571+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:46:55.718633+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:46:55.718718+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:46:55.718843+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:46:55.719290+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:46:55.724787+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:48:57.998749+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:48:57.999079+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:48:57.999627+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:48:58.001687+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:48:58.001950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:48:58.002131+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:48:58.002363+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:48:58.002401+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:48:58.002540+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:48:58.002591+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:48:58.002614+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:48:58.002676+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:48:58.002751+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:48:58.002861+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:48:58.003523+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:48:58.011283+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T13:54:54.060204+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T13:54:54.060561+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T13:54:54.061208+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T13:54:54.063904+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T13:54:54.064163+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:54:54.064358+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T13:54:54.064627+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:54:54.064664+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T13:54:54.064812+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:54:54.064862+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:54:54.064886+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T13:54:54.064944+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:54:54.065021+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T13:54:54.065141+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T13:54:54.065547+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T13:54:54.072452+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:02:57.046817+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T15:02:57.047132+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:02:57.047626+02:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\serializeArray() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\serializeArray() at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:40)"} []
[2022-08-01T15:02:57.048969+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:02:57.049586+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "serializeArray" from namespace "App\Controller"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 40 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"serializeArray\" from namespace \"App\\Controller\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:40)"} []
[2022-08-01T15:02:57.059876+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:02:57.060094+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:02:57.060289+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:02:57.060539+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:02:57.060572+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:02:57.060706+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:02:57.060754+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:02:57.060776+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:02:57.060831+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:02:57.060903+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:02:57.061022+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:02:57.061438+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:02:57.078436+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:02:57.084574+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"27b8fd"},"request_uri":"http://localhost:8000/_wdt/27b8fd","method":"GET"} []
[2022-08-01T15:02:57.085335+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:04:44.218627+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T15:04:44.218964+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:04:44.219366+02:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\serializeArray() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\serializeArray() at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:40)"} []
[2022-08-01T15:04:44.219641+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:04:44.220093+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "serializeArray" from namespace "App\Controller"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 40 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"serializeArray\" from namespace \"App\\Controller\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:40)"} []
[2022-08-01T15:04:44.225575+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:04:44.225849+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:04:44.226047+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:04:44.226304+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:04:44.226337+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:04:44.226477+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:04:44.226526+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:04:44.226550+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:04:44.226609+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:04:44.226693+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:04:44.226812+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:04:44.228029+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:04:44.243768+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:04:44.250334+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e2d3e1"},"request_uri":"http://localhost:8000/_wdt/e2d3e1","method":"GET"} []
[2022-08-01T15:04:44.250757+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:07:28.307075+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T15:07:28.307511+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:07:28.308138+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:07:28.308703+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Array to string conversion" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 40 {"exception":"[object] (ErrorException(code: 0): Warning: Array to string conversion at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:40)"} []
[2022-08-01T15:07:28.314626+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:07:28.314905+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:07:28.315131+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:07:28.315402+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:28.315440+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:07:28.315598+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:28.315652+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:28.315677+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:07:28.315736+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:28.315814+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:28.315935+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:07:28.316340+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:28.331399+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:07:28.336172+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1c244f"},"request_uri":"http://localhost:8000/_wdt/1c244f","method":"GET"} []
[2022-08-01T15:07:28.336957+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:07:46.653878+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T15:07:46.654441+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:07:46.655447+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:07:46.658096+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:07:46.658383+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:07:46.658584+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:07:46.658856+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:46.658890+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:07:46.659035+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:46.659084+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:46.659106+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:07:46.659161+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:46.659232+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:07:46.659365+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:07:46.659846+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:07:46.666882+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:08:37.765354+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2022-08-01T15:08:37.765685+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:08:37.766901+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:08:37.770010+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:08:37.770458+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:08:37.770750+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:08:37.771192+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:08:37.771240+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:08:37.771435+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:08:37.771505+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:08:37.771534+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:08:37.771599+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:08:37.771685+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:08:37.771812+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:08:37.772242+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:08:37.778020+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:26:02.393866+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:26:02.415824+02:00] request.INFO: Matched route "app_test_update". {"route":"app_test_update","route_parameters":{"_route":"app_test_update","_controller":"App\\Controller\\TestController::update"},"request_uri":"http://localhost:8000/update","method":"GET"} []
[2022-08-01T15:26:02.416301+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:26:02.416841+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:26:02.419725+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:26:02.420017+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:26:02.420166+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:26:02.420199+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:26:02.420344+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:26:02.420393+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:26:02.420416+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:26:02.420471+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:26:02.420544+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:26:02.420653+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:26:02.421344+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:26:02.430625+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:29:36.075865+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:29:36.097188+02:00] request.INFO: Matched route "app_test_delete". {"route":"app_test_delete","route_parameters":{"_route":"app_test_delete","_controller":"App\\Controller\\TestController::delete"},"request_uri":"http://localhost:8000/delete","method":"GET"} []
[2022-08-01T15:29:36.097996+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:29:36.098907+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:29:36.101439+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:29:36.101755+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:29:36.101982+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:29:36.102221+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:29:36.102424+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:29:36.102487+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:29:36.102516+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:29:36.102586+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:29:36.102682+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:29:36.102819+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:29:36.103538+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:29:36.114000+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-01T15:34:43.518589+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/add","method":"GET"} []
[2022-08-01T15:34:43.519457+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-01T15:34:43.520200+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-01T15:34:43.523380+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-01T15:34:43.523737+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:34:43.523930+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-01T15:34:43.524169+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:34:43.524203+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-01T15:34:43.524333+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:34:43.524381+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:34:43.524403+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-01T15:34:43.524455+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:34:43.524528+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-01T15:34:43.524632+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-01T15:34:43.525019+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-01T15:34:43.533684+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:42:04.427220+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:42:04.460069+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/add","method":"GET"} []
[2022-08-02T09:42:04.460979+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T09:42:04.462083+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/Container7xpggM3/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:42:04.474388+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:42:04.475185+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:42:04.479012+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:42:04.479078+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:42:04.479796+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:42:04.479996+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:42:04.480030+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:42:04.480096+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:42:04.480175+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:42:04.480453+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:42:04.482708+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:42:04.496136+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:43:16.274043+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2022-08-02T09:43:16.276615+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2022-08-02T09:43:16.276652+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-08-02T09:43:16.279953+02:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/lexik/jwt-authentication-bundle/Security/Authenticator/JWTAuthenticator.php:114)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-08-02T09:43:16.281437+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-08-02T09:43:16.281600+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2022-08-02T09:43:16.281881+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/Container7xpggM3/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:43:16.284297+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:43:16.284754+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:43:16.285014+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:43:16.285319+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:16.285357+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:43:16.285523+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:16.285577+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:16.285601+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:43:16.285660+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:16.285740+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:16.285861+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:43:16.286304+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:16.295673+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:43:39.367263+02:00] request.INFO: Matched route "app_test_index". {"route":"app_test_index","route_parameters":{"_route":"app_test_index","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://127.0.0.1:8000/add","method":"GET"} []
[2022-08-02T09:43:39.367965+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T09:43:39.368735+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/Container7xpggM3/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:43:39.369989+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:43:39.370194+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:43:39.370371+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:43:39.370557+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:39.370587+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:43:39.370709+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:39.370756+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:39.370777+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:43:39.370830+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:39.370900+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:43:39.371005+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:43:39.371348+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:43:39.375209+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:50:18.349102+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:50:18.372278+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/Container7xpggM3/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:50:18.373676+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST http://127.0.0.1:8000/addMeter"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST http://127.0.0.1:8000/addMeter\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/addMeter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-08-02T09:50:18.392714+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:50:18.392964+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:50:18.393113+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:50:18.393146+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:50:18.393308+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:50:18.393365+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:50:18.393390+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:50:18.393469+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:50:18.393554+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:50:18.393693+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:50:18.394501+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:50:18.410637+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:52:29.456501+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T09:52:29.457484+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T09:52:29.458285+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/Container7xpggM3/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:52:29.458976+02:00] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Controller\Request" does not exist" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/doctrine/persistence/src/Persistence/AbstractManagerRegistry.php line 173 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Controller\\Request\" does not exist at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/doctrine/persistence/src/Persistence/AbstractManagerRegistry.php:173)"} []
[2022-08-02T09:52:29.468126+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:52:29.468453+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:52:29.468649+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:52:29.468898+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:52:29.468930+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:52:29.469063+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:52:29.469111+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:52:29.469133+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:52:29.469187+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:52:29.469257+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:52:29.469362+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:52:29.469745+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:52:29.480737+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:54:14.490687+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:54:14.510629+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T09:54:14.511189+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T09:54:14.511955+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:54:14.514184+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:54:14.514444+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:54:14.514574+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:54:14.514605+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:54:14.514746+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:54:14.514793+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:54:14.514815+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:54:14.514870+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:54:14.514940+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:54:14.515048+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:54:14.515723+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:54:14.522789+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T09:55:25.234192+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T09:55:25.235281+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T09:55:25.236446+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T09:55:25.238865+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T09:55:25.239233+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:55:25.239421+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T09:55:25.239657+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:55:25.239690+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T09:55:25.239820+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:55:25.239867+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:55:25.239888+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T09:55:25.239941+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:55:25.240011+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T09:55:25.240121+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T09:55:25.240526+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T09:55:25.246955+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:36:03.277533+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T10:36:03.297941+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:36:03.298437+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:36:03.300670+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:36:35.269118+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T10:36:35.270131+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:36:41.824261+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"60"},"request_uri":"http://localhost:8000/getMeter/60","method":"GET"} []
[2022-08-02T10:36:41.824624+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:38:22.526170+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T10:38:22.957532+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:42:39.629160+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:42:39.629939+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:42:39.630746+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T10:42:39.633352+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T10:42:39.634119+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T10:42:39.634417+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T10:42:39.634727+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:42:39.634767+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T10:42:39.634926+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:42:39.634980+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:42:39.635012+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T10:42:39.635076+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:42:39.635157+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:42:39.635281+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T10:42:39.636105+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:42:39.644151+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:43:21.024917+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:43:21.025233+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:43:21.025843+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T10:43:21.027421+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T10:43:21.027596+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T10:43:21.027775+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T10:43:21.027968+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:43:21.028000+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T10:43:21.028123+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:43:21.028171+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:43:21.028192+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T10:43:21.028246+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:43:21.028315+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T10:43:21.028420+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T10:43:21.028766+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T10:43:21.033025+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:43:46.659168+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:43:46.659666+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:43:50.283965+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:43:50.284307+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:44:10.779749+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:44:10.780061+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:45:47.515499+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:45:47.515907+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:47:06.554664+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T10:47:06.575218+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:47:06.575846+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:47:06.578025+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T10:47:08.170451+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:47:08.171309+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:48:09.361064+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:48:09.361483+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:48:10.557932+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:48:10.558199+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:49:42.648899+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:49:42.649262+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:49:43.862699+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:49:43.862942+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:49:53.920849+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:49:53.921226+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:51:02.812301+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:51:02.812624+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:52:48.265930+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:52:48.266338+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:54:32.717447+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:54:32.717854+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:56:49.266301+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:56:49.266676+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T10:57:03.634831+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T10:57:03.635196+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:00:05.297181+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T11:00:05.320314+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:00:05.320842+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:00:05.323513+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T11:00:09.868762+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:00:09.870084+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:01:29.498915+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T11:01:29.522348+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:01:29.523004+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:01:29.525860+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T11:02:49.899487+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T11:02:49.922938+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:02:49.923506+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:02:49.925905+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T11:04:38.288554+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:04:38.289472+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:04:39.925524+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:04:39.926142+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:04:44.618475+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T11:04:44.619661+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:04:53.028791+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T11:04:53.029145+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:05:40.012003+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T11:05:40.018133+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:14:19.502610+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T11:14:19.502957+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:18:38.758861+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T11:18:38.759181+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T11:51:24.994874+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T11:51:24.995321+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:40:34.054197+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:40:34.081805+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"2"},"request_uri":"http://localhost:8000/getMeter/2","method":"GET"} []
[2022-08-02T14:40:34.082449+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:40:34.085468+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:40:41.644477+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:40:41.645222+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:41:22.890223+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:41:22.890617+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:42:09.159507+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login","method":"GET"} []
[2022-08-02T14:42:09.162078+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"login","authenticators":1} []
[2022-08-02T14:42:09.162115+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"login","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-08-02T14:42:09.164621+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:42:09.170913+02:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"cc"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"cc"},"types":{"1":2}} []
[2022-08-02T14:42:09.672419+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken":"UsernamePasswordToken(user=\"cc\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-08-02T14:42:09.718207+02:00] security.DEBUG: The "Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator"} []
[2022-08-02T14:42:09.718716+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:42:09.728887+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:42:09.729087+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:42:09.733740+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:42:09.733840+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:42:09.734364+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:42:09.734644+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:42:09.734682+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:42:09.734775+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:42:09.734874+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:42:09.735183+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:42:09.736694+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:42:09.745164+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:43:28.436705+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:43:28.437103+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:43:28.437816+02:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\json() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\json() at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:207)"} []
[2022-08-02T14:43:28.439718+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:43:28.441234+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "json" from namespace "App\Controller"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 207 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"json\" from namespace \"App\\Controller\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:207)"} []
[2022-08-02T14:43:28.452995+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:43:28.453232+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:43:28.453445+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:43:28.453715+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:43:28.453750+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:43:28.453952+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:43:28.454011+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:43:28.454040+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:43:28.454101+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:43:28.454182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:43:28.454326+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:43:28.454884+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:43:28.471346+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:44:06.592346+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:44:06.592750+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:44:06.593390+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:44:06.595604+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:44:06.595855+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:44:06.596044+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:44:06.596280+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:44:06.596311+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:44:06.596444+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:44:06.596493+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:44:06.596514+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:44:06.596568+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:44:06.596640+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:44:06.596756+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:44:06.597147+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:44:06.604965+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:44:35.819976+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:44:35.820389+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:46:18.845345+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:46:18.845686+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:46:28.503244+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:46:28.503611+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:46:28.504200+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:46:28.506734+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:46:28.507018+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:46:28.507257+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:46:28.507584+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:28.507624+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:46:28.507794+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:28.507849+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:28.507874+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:46:28.507937+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:28.508019+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:28.508141+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:46:28.508569+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:28.514987+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:46:52.194071+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:46:52.217951+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:46:52.218550+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:46:52.219400+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:46:52.222888+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:46:52.223227+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:46:52.223379+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:52.223428+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:46:52.223612+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:52.223673+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:52.223710+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:46:52.223779+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:52.223871+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:46:52.224005+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:46:52.224827+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:46:52.233028+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:48:02.436452+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:48:02.459135+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:48:02.459702+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:48:02.460376+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:48:02.462493+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:48:02.462812+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:48:02.463018+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:02.463075+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:48:02.463311+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:02.463391+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:02.463427+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:48:02.463532+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:02.463660+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:02.464082+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:48:02.465052+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:02.473082+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:48:03.902819+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:48:03.903394+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:48:03.904161+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:48:03.905776+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:48:03.906004+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:48:03.906198+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:48:03.906365+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:03.906404+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:48:03.906549+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:03.906606+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:03.906633+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:48:03.906696+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:03.906781+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:48:03.906910+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:48:03.907263+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:48:03.912231+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:49:45.771311+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:49:45.772287+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:49:45.774298+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:49:45.775275+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T14:49:45.795871+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:49:45.796269+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:49:45.796496+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:49:45.796781+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:49:45.796816+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:49:45.796961+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:49:45.797014+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:49:45.797039+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:49:45.797099+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:49:45.797183+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:49:45.797303+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:49:45.797771+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:49:45.812945+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:51:17.543839+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:51:17.544231+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:51:17.544705+02:00] php.CRITICAL: Uncaught Error: App\Controller\TestController::getMeter(): Return value must be of type Symfony\Component\HttpFoundation\JsonResponse, App\Entity\Meter returned {"exception":"[object] (TypeError(code: 0): App\\Controller\\TestController::getMeter(): Return value must be of type Symfony\\Component\\HttpFoundation\\JsonResponse, App\\Entity\\Meter returned at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:211)"} []
[2022-08-02T14:51:17.544953+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:51:17.545423+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "App\Controller\TestController::getMeter(): Return value must be of type Symfony\Component\HttpFoundation\JsonResponse, App\Entity\Meter returned" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 211 {"exception":"[object] (TypeError(code: 0): App\\Controller\\TestController::getMeter(): Return value must be of type Symfony\\Component\\HttpFoundation\\JsonResponse, App\\Entity\\Meter returned at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:211)"} []
[2022-08-02T14:51:17.551233+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:51:17.551461+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:51:17.551666+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:51:17.551913+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:17.551948+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:51:17.552089+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:17.552147+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:17.552170+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:51:17.552239+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:17.552317+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:17.552441+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:51:17.552899+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:17.565468+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:51:52.752120+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T14:51:52.776193+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:51:52.776867+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T14:51:52.778143+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T14:51:52.778736+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException: "The controller must return a "Symfony\Component\HttpFoundation\Response" object but it returned an object of type App\Entity\Meter." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 215 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\ControllerDoesNotReturnResponseException(code: 0): The controller must return a \"Symfony\\Component\\HttpFoundation\\Response\" object but it returned an object of type App\\Entity\\Meter. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:215)"} []
[2022-08-02T14:51:52.785072+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:51:52.785339+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T14:51:52.785468+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:52.785499+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T14:51:52.785668+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:52.785721+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:52.785744+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T14:51:52.785801+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:52.785883+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T14:51:52.786011+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T14:51:52.786839+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T14:51:52.804404+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T14:52:22.182769+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T14:52:22.183609+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:01:46.089858+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:01:46.090222+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:01:46.092005+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:01:46.092655+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T15:01:46.111859+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:01:46.112304+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:01:46.112522+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:01:46.112795+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:01:46.112832+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:01:46.113014+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:01:46.113078+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:01:46.113107+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:01:46.113178+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:01:46.113272+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:01:46.113423+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:01:46.114027+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:01:46.130387+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:16:11.146129+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:16:11.170818+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:16:11.171410+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:16:11.173613+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:16:11.174734+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T15:16:11.193517+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:16:11.193749+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:16:11.193935+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:16:11.193976+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:16:11.194149+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:16:11.194203+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:16:11.194234+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:16:11.194305+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:16:11.194400+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:16:11.194541+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:16:11.195491+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:16:11.212163+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:19:39.726090+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:19:39.750577+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:19:39.751092+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:19:39.751684+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:19:39.752224+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined property: App\Controller\TestController::$serializer" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 209 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined property: App\\Controller\\TestController::$serializer at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:209)"} []
[2022-08-02T15:19:39.759172+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:19:39.759521+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:19:39.759678+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:19:39.759729+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:19:39.759928+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:19:39.759995+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:19:39.760027+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:19:39.760100+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:19:39.760324+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:19:39.760658+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:19:39.761486+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:19:39.776353+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:20:03.087610+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:20:03.088749+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:20:03.089636+02:00] php.CRITICAL: Uncaught Error: Symfony\Component\Serializer\Serializer::serialize(): Argument #2 ($format) must be of type string, null given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 209 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\Serializer\\Serializer::serialize(): Argument #2 ($format) must be of type string, null given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 209 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/serializer/Serializer.php:120)"} []
[2022-08-02T15:20:03.089930+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:20:03.090695+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Symfony\Component\Serializer\Serializer::serialize(): Argument #2 ($format) must be of type string, null given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 209" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/serializer/Serializer.php line 120 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\Serializer\\Serializer::serialize(): Argument #2 ($format) must be of type string, null given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 209 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/serializer/Serializer.php:120)"} []
[2022-08-02T15:20:03.098381+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:20:03.098831+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:20:03.099065+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:20:03.099335+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:03.099374+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:20:03.099537+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:03.099603+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:03.099631+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:20:03.099697+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:03.099784+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:03.099911+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:20:03.100386+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:03.114902+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:20:18.549528+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:20:18.549908+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:20:18.551625+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:20:18.552145+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T15:20:18.570928+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:20:18.571290+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:20:18.571523+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:20:18.571843+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:18.571897+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:20:18.572063+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:18.572120+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:18.572146+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:20:18.572212+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:18.572305+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:20:18.572433+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:20:18.572886+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:20:18.587300+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:21:16.204779+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:21:16.205160+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:21:16.206896+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:21:16.207525+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T15:21:16.225259+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:21:16.225546+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:21:16.225744+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:21:16.226026+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:16.226061+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:21:16.226218+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:16.226272+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:16.226297+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:21:16.226358+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:16.226449+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:16.226574+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:21:16.226994+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:16.241376+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:21:20.151787+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:21:20.152269+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:21:20.154244+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:21:20.154917+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 158 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:158)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_meters_get_item\" must match \"[^/\\.]++\" (\"\" given) to generate a corresponding URL. at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Generator/UrlGenerator.php:194)"} []
[2022-08-02T15:21:20.178235+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:21:20.178453+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:21:20.178680+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:21:20.178895+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:20.178930+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:21:20.179073+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:20.179122+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:20.179146+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:21:20.179203+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:20.179281+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:21:20.179393+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:21:20.179773+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:21:20.191286+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:26:25.148439+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:26:25.175703+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:26:25.176306+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:26:25.176988+02:00] php.CRITICAL: Uncaught Error: Symfony\Component\HttpFoundation\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 212 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\HttpFoundation\\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 212 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php:215)"} []
[2022-08-02T15:26:25.177211+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:26:25.177900+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Symfony\Component\HttpFoundation\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 212" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php line 215 {"exception":"[object] (TypeError(code: 0): Symfony\\Component\\HttpFoundation\\Response::__construct(): Argument #1 ($content) must be of type ?string, array given, called in /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php on line 212 at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-foundation/Response.php:215)"} []
[2022-08-02T15:26:25.186670+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:26:25.187111+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:26:25.187299+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:26:25.187345+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:26:25.187552+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:26:25.187647+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:26:25.187678+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:26:25.187746+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:26:25.187855+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:26:25.187984+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:26:25.188844+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:26:25.205380+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:27:20.659590+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:27:20.660550+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:27:20.661259+02:00] php.CRITICAL: Uncaught Error: Call to a member function toString() on array {"exception":"[object] (Error(code: 0): Call to a member function toString() on array at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:212)"} []
[2022-08-02T15:27:20.661495+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:27:20.662550+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function toString() on array" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 212 {"exception":"[object] (Error(code: 0): Call to a member function toString() on array at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:212)"} []
[2022-08-02T15:27:20.670118+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:27:20.670717+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:27:20.671031+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:27:20.671414+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:27:20.671478+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:27:20.671716+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:27:20.671796+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:27:20.671828+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:27:20.671919+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:27:20.672047+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:27:20.672287+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:27:20.673625+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:27:20.688275+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:28:03.494804+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:28:03.495453+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:28:03.496675+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:28:03.501236+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:28:03.501634+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:28:03.501885+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:28:03.502182+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:03.502221+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:28:03.502410+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:03.502477+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:03.502506+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:28:03.502581+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:03.502683+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:03.502815+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:28:03.503360+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:03.512025+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:28:54.960699+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:28:54.961073+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:28:54.961686+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:28:54.963942+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:28:54.964238+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:28:54.964511+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:28:54.964809+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:54.964849+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:28:54.965017+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:54.965078+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:54.965105+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:28:54.965174+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:54.965264+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:28:54.965412+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:28:54.965951+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:28:54.972902+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:35:29.726827+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:35:29.727172+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:35:29.727731+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:35:29.730137+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:35:29.730415+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:35:29.730609+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:35:29.730906+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:35:29.730952+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:35:29.731130+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:35:29.731178+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:35:29.731201+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:35:29.731256+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:35:29.731338+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:35:29.731448+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:35:29.731894+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:35:29.739761+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:41:17.362560+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T15:41:17.363017+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:41:17.363911+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:41:17.365905+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:41:17.366173+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:41:17.366357+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:41:17.366622+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:41:17.366665+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:41:17.366825+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:41:17.366889+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:41:17.366914+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:41:17.366976+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:41:17.367057+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:41:17.367169+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:41:17.367596+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:41:17.373288+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:42:30.403457+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"60"},"request_uri":"http://localhost:8000/getMeter/60","method":"GET"} []
[2022-08-02T15:42:30.403802+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:42:30.404430+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:42:30.406022+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:42:30.406203+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:42:30.406394+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:42:30.406621+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:42:30.406653+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:42:30.406781+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:42:30.406829+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:42:30.406850+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:42:30.406905+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:42:30.406975+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:42:30.407082+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:42:30.407434+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:42:30.411449+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:50:02.420238+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:50:02.440918+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T15:50:02.441422+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:50:02.442638+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:50:02.445070+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:50:02.445341+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:50:02.445471+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.445502+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:50:02.445656+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.445705+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.445727+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:50:02.445782+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.445854+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.445999+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:50:02.446675+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.453984+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:50:02.461537+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T15:50:02.461985+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:50:02.462585+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:50:02.464035+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:50:02.464260+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:50:02.464461+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:50:02.464618+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.464651+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:50:02.464782+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.464836+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.464860+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:50:02.464920+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.465000+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:50:02.465125+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:50:02.465481+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:50:02.470057+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:52:08.654849+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T15:52:08.655652+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:52:08.656787+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:52:08.659350+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:52:08.659771+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:08.659970+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:08.660222+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.660255+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:52:08.660407+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.660487+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.660521+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:52:08.660577+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.660670+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.660794+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:52:08.661226+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.667978+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:52:08.677060+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T15:52:08.677383+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:52:08.678137+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:52:08.679385+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:52:08.679540+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:08.679716+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:08.679863+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.679894+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:52:08.680008+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.680056+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.680078+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:52:08.680133+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.680206+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:08.680326+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:52:08.680669+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:08.684741+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:52:48.152119+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:52:48.153011+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/getMeters"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/getMeters\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/getMeters/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-08-02T15:52:48.166255+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:52:48.166549+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:48.166883+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:52:48.167141+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:48.167179+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:52:48.167325+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:48.167380+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:48.167406+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:52:48.167467+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:48.167547+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:52:48.167668+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:52:48.168078+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:52:48.177836+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:52:48.189476+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a3b8fa"},"request_uri":"http://localhost:8000/_wdt/a3b8fa","method":"GET"} []
[2022-08-02T15:52:48.190100+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:53:11.741236+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T15:53:11.741745+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:53:11.742651+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:53:11.744245+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:53:11.744471+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:53:11.744711+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:53:11.744969+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.745013+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:53:11.745183+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.745249+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.745292+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:53:11.745369+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.745475+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.745650+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:53:11.746475+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.752198+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:53:11.754814+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T15:53:11.755008+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:53:11.755514+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:53:11.756545+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:53:11.756700+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:53:11.756887+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:53:11.757039+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.757072+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:53:11.757193+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.757244+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.757267+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:53:11.757326+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.757401+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:53:11.757510+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:53:11.757830+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:53:11.761668+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:56:17.058020+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T15:56:17.058387+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:56:17.058984+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:56:17.061018+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:56:17.061219+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:56:17.061420+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:56:17.061671+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:56:17.061705+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:56:17.061850+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:56:17.061916+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:56:17.061948+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:56:17.062004+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:56:17.062076+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:56:17.062186+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:56:17.062574+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:56:17.068748+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:57:27.000999+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T15:57:27.001335+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:57:27.002082+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:57:27.004235+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:57:27.004513+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:57:27.004699+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:57:27.004937+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.004968+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:57:27.005121+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.005182+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.005207+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:57:27.005267+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.005347+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.005471+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:57:27.005910+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.011565+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:57:27.019675+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T15:57:27.019899+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:57:27.020315+02:00] php.CRITICAL: Uncaught Error: Call to a member function getNodeId() on array {"exception":"[object] (Error(code: 0): Call to a member function getNodeId() on array at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:241)"} []
[2022-08-02T15:57:27.020444+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:57:27.020856+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getNodeId() on array" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 241 {"exception":"[object] (Error(code: 0): Call to a member function getNodeId() on array at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:241)"} []
[2022-08-02T15:57:27.026012+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:57:27.026190+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:57:27.026379+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:57:27.026525+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.026556+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:57:27.026677+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.026738+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.026762+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:57:27.026821+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.026901+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:57:27.027014+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:57:27.027386+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:57:27.037396+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:59:59.440800+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T15:59:59.441153+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:59:59.441843+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:59:59.443955+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:59:59.444197+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:59:59.444382+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:59:59.444627+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.444658+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:59:59.444794+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.444845+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.444867+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:59:59.444922+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.444993+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.445098+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:59:59.445502+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.451787+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T15:59:59.462390+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T15:59:59.462599+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T15:59:59.463097+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T15:59:59.464238+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T15:59:59.464404+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:59:59.464588+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T15:59:59.464728+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.464758+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T15:59:59.464872+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.464919+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.464940+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T15:59:59.464995+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.465081+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T15:59:59.465193+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T15:59:59.465547+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T15:59:59.469680+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:01:25.777707+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T16:01:25.778064+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:01:25.778739+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:01:25.780661+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:01:25.780890+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:01:25.781066+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:01:25.781300+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.781333+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:01:25.781467+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.781517+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.781540+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:01:25.781595+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.781666+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.781773+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:01:25.782231+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.787744+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:01:25.795370+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T16:01:25.795583+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:01:25.796002+02:00] php.CRITICAL: Uncaught Error: Cannot access offset of type string on string {"exception":"[object] (TypeError(code: 0): Cannot access offset of type string on string at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:240)"} []
[2022-08-02T16:01:25.796125+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:01:25.796506+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Cannot access offset of type string on string" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 240 {"exception":"[object] (TypeError(code: 0): Cannot access offset of type string on string at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:240)"} []
[2022-08-02T16:01:25.801101+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:01:25.801255+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:01:25.801429+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:01:25.801563+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.801592+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:01:25.801703+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.801759+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.801781+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:01:25.801835+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.801959+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:01:25.802087+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:01:25.802432+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:01:25.812355+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:07:43.898078+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T16:07:43.898393+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:07:43.899024+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:07:43.901001+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:07:43.901242+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:43.901430+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:43.901662+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.901694+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:07:43.901828+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.901888+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.901926+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:07:43.901987+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.902071+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.902225+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:07:43.902610+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.908368+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:07:43.915931+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T16:07:43.916140+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:07:43.916664+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:07:43.917854+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:07:43.918061+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:43.918246+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:43.918384+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.918415+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:07:43.918529+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.918576+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.918598+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:07:43.918652+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.918733+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:43.918851+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:07:43.919216+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:43.923159+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:07:51.180218+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T16:07:51.180527+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:07:51.181108+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:07:51.182604+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:07:51.182779+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:51.182957+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:07:51.183148+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:51.183179+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:07:51.183306+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:51.183355+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:51.183377+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:07:51.183431+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:51.183503+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:07:51.183614+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:07:51.183952+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:07:51.189082+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:08:14.969473+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T16:08:14.969982+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:08:14.971098+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:08:14.973728+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:08:14.974002+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:14.974267+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:14.974555+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:14.974604+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:08:14.974790+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:14.974865+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:14.974898+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:08:14.974995+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:14.975109+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:14.975272+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:08:14.975772+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:14.980477+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:08:36.560157+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T16:08:36.560446+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:08:36.561039+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:08:36.562357+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:08:36.562541+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:36.562738+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:36.562948+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:36.562982+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:08:36.563131+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:36.563184+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:36.563210+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:08:36.563270+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:36.563352+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:36.563485+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:08:36.563868+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:36.568766+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T16:08:48.542273+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T16:08:48.542575+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T16:08:48.543472+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T16:08:48.545742+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T16:08:48.546087+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:48.546407+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T16:08:48.546701+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:48.546751+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T16:08:48.546943+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:48.547019+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:48.547056+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T16:08:48.547144+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:48.547267+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T16:08:48.547437+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T16:08:48.547916+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T16:08:48.553224+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:09:44.869324+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:09:44.895383+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:09:44.896020+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:09:44.896871+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:09:44.899661+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:09:44.899942+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:09:44.900101+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:09:44.900139+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:09:44.900319+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:09:44.900391+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:09:44.900417+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:09:44.900479+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:09:44.900563+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:09:44.900684+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:09:44.901403+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:09:44.911830+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:14:11.533456+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:14:11.534735+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:14:11.535971+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:14:11.538713+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:14:11.539116+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:14:11.539330+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:14:11.539589+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:11.539624+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:14:11.539765+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:11.539816+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:11.539839+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:14:11.539896+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:11.539972+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:11.540100+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:14:11.540497+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:11.553698+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:14:26.539521+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:14:26.540054+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:14:26.541193+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:14:26.544405+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:14:26.545074+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:14:26.545656+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:14:26.546488+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:26.546673+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:14:26.547154+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:26.547348+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:26.547520+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:14:26.547686+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:26.547887+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:14:26.548127+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:14:26.549013+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:14:26.555341+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:17:15.907260+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:17:15.907764+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:17:15.908523+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:17:15.910906+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:17:15.911196+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:15.911435+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:15.911735+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:15.911772+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:17:15.911942+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:15.912003+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:15.912029+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:17:15.912095+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:15.912181+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:15.912313+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:17:15.912781+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:15.918463+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:17:46.863376+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:17:46.863890+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:17:46.864681+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:17:46.867388+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:17:46.867655+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:46.867861+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:46.868115+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:46.868149+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:17:46.868300+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:46.868367+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:46.868395+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:17:46.868460+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:46.868544+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:46.868683+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:17:46.869196+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:46.876656+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:17:56.584963+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:17:56.585427+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:17:56.586309+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:17:56.588470+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:17:56.588667+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:56.588865+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:17:56.589079+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:56.589113+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:17:56.589248+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:56.589300+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:56.589323+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:17:56.589383+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:56.589459+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:17:56.589574+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:17:56.589981+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:17:56.595193+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:18:52.375690+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T20:18:52.376077+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:18:52.377313+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:18:52.379749+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:18:52.380074+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:52.380291+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:52.380578+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.380615+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:18:52.380773+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.380831+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.380857+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:18:52.380918+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.381000+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.381130+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:18:52.381559+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.388419+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:18:52.397312+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T20:18:52.397554+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:18:52.398131+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:18:52.399759+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:18:52.400033+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:52.400335+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:52.400604+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.400673+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:18:52.401038+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.401134+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.401222+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:18:52.401392+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.401506+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:52.401648+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:18:52.402141+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:52.407684+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:18:56.724108+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:18:56.724857+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:18:56.726493+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:18:56.729256+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:18:56.729496+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:56.729722+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:18:56.729998+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:56.730041+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:18:56.730209+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:56.730290+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:56.730329+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:18:56.730423+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:56.730519+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:18:56.730653+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:18:56.731319+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:18:56.738144+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:19:08.297271+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:19:08.297684+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:19:08.298534+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:19:08.300425+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:19:08.300672+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:19:08.300907+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:19:08.301141+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:08.301178+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:19:08.301324+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:08.301387+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:08.301411+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:19:08.301470+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:08.301548+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:08.301662+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:19:08.302068+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:08.307364+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:19:54.760744+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:19:54.761167+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:19:54.761980+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:19:54.763483+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:19:54.763708+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:19:54.763948+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:19:54.764414+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:54.764453+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:19:54.764603+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:54.764660+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:54.764687+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:19:54.764752+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:54.764840+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:19:54.765012+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:19:54.765470+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:19:54.773077+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:20:03.087535+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:20:03.088169+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:20:03.089196+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:20:03.090813+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:20:03.091040+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:03.091275+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:03.091572+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:03.091623+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:20:03.091817+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:03.091892+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:03.091927+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:20:03.092017+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:03.092144+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:03.092341+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:20:03.092890+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:03.098090+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:20:29.297774+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:20:29.298152+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:20:29.298905+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:20:29.300178+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:20:29.300374+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:29.300585+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:29.300799+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:29.300840+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:20:29.300976+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:29.301036+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:29.301068+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:20:29.301129+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:29.301433+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:29.301803+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:20:29.302467+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:29.308561+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:20:43.081514+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:20:43.082029+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:20:43.082751+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:20:43.083261+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "node_id"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 97 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"node_id\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:97)"} []
[2022-08-02T20:20:43.091362+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:20:43.091667+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:43.091960+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:20:43.092227+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:43.092268+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:20:43.092431+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:43.092495+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:43.092524+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:20:43.092594+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:43.092687+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:20:43.092824+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:20:43.093305+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:20:43.106832+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:21:11.124776+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"2"},"request_uri":"http://localhost:8000/deleteMeter/2","method":"DELETE"} []
[2022-08-02T20:21:11.125212+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:21:11.125998+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:21:11.127947+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:21:11.128178+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:11.128405+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:11.128690+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:11.128730+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:21:11.128890+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:11.128944+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:11.128968+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:21:11.129029+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:11.129108+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:11.129233+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:21:11.129619+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:11.134171+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:21:22.343855+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:21:22.344430+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:21:22.345228+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:21:22.346574+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:21:22.346760+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:22.346951+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:22.347160+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:22.347192+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:21:22.347324+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:22.347373+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:22.347395+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:21:22.347452+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:22.347527+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:22.347646+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:21:22.347999+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:22.353227+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:21:47.413156+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"2"},"request_uri":"http://localhost:8000/deleteMeter/2","method":"DELETE"} []
[2022-08-02T20:21:47.413519+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:21:47.414304+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:21:47.415611+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:21:47.415788+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:47.415977+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:21:47.416174+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:47.416208+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:21:47.416338+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:47.416396+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:47.416419+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:21:47.416475+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:47.416564+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:21:47.416679+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:21:47.417217+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:21:47.422152+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:22:41.417566+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:22:41.418001+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:22:41.418836+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:22:41.420164+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:22:41.420365+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:22:41.420771+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:22:41.421001+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:22:41.421036+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:22:41.421181+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:22:41.421232+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:22:41.421256+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:22:41.421315+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:22:41.421391+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:22:41.421504+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:22:41.421884+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:22:41.426936+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:23:07.079086+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:23:07.079464+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:23:07.080283+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:23:07.081742+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:23:07.082157+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:07.082443+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:07.082763+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:07.082831+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:23:07.083017+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:07.083080+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:07.083110+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:23:07.083182+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:07.083281+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:07.083437+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:23:07.084095+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:07.090662+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:23:19.125249+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:23:19.125657+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:23:19.126668+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:23:19.128079+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:23:19.128289+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:19.128488+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:19.128730+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:19.128763+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:23:19.128899+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:19.128947+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:19.128969+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:23:19.129023+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:19.129094+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:19.129201+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:23:19.129544+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:19.135535+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:23:55.518744+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:23:55.519253+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:23:55.520357+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:23:55.522524+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:23:55.522814+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:55.523015+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:23:55.523284+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:55.523317+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:23:55.523479+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:55.523538+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:55.523567+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:23:55.523627+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:55.523706+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:23:55.523833+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:23:55.524237+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:23:55.530942+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:24:04.624926+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:24:04.625435+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:24:04.626839+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:24:04.629122+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:24:04.629483+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:24:04.629846+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:24:04.630235+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:04.630298+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:24:04.630543+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:04.630647+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:04.630689+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:24:04.630802+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:04.630933+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:04.631132+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:24:04.631798+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:04.637802+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:24:19.212890+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:24:19.213348+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:24:19.214583+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:24:19.216368+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:24:19.216610+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:24:19.217271+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:24:19.217546+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:19.217598+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:24:19.217769+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:19.217847+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:19.217885+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:24:19.217995+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:19.218124+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:24:19.218329+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:24:19.218889+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:24:19.226938+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:25:51.630835+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:25:51.631493+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:25:51.633228+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:25:51.634762+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:25:51.634984+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:25:51.635214+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:25:51.635462+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:25:51.635500+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:25:51.635650+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:25:51.635706+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:25:51.635733+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:25:51.635808+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:25:51.635896+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:25:51.636026+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:25:51.636449+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:25:51.642899+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:26:13.938117+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:26:13.939062+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/getMeter/1"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/getMeter/1\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/getMeter/1/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-08-02T20:26:13.953325+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:26:13.953569+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:26:13.953773+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:26:13.954062+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:26:13.954113+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:26:13.954562+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:26:13.954655+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:26:13.954686+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:26:13.954756+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:26:13.954854+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:26:13.955005+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:26:13.955443+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:26:13.965503+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:27:55.932126+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:27:55.933032+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/getMeter/1"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/getMeter/1\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/getMeter/1/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-08-02T20:27:55.952356+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:27:55.952592+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:27:55.952804+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:27:55.953040+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:27:55.953078+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:27:55.953226+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:27:55.953304+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:27:55.953332+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:27:55.953399+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:27:55.953488+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:27:55.953619+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:27:55.954170+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:27:55.963648+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:28:52.611208+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:28:52.612284+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/getMeter/1"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/getMeter/1\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/getMeter/1/\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2022-08-02T20:28:52.627734+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:28:52.628013+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:28:52.628213+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:28:52.628459+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:28:52.628493+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:28:52.628632+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:28:52.628684+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:28:52.628706+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:28:52.628762+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:28:52.628837+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:28:52.628948+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:28:52.629363+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:28:52.642742+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:29:16.501429+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T20:29:16.501811+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:29:16.502617+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:29:16.505329+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:29:16.505774+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:16.506098+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:16.506397+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.506447+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:29:16.506642+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.506723+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.506755+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:29:16.506834+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.506936+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.507088+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:29:16.507596+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.512444+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:29:16.532035+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T20:29:16.532254+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:29:16.532894+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:29:16.534328+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:29:16.534516+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:16.534715+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:16.534868+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.534903+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:29:16.535032+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.535093+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.535117+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:29:16.535176+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.535253+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:16.535375+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:29:16.535714+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:16.541485+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:29:23.332237+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T20:29:23.332659+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:29:23.333696+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:29:23.335027+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:29:23.335217+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:23.335441+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:29:23.335657+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:23.335691+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:29:23.335905+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:23.335991+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:23.336029+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:29:23.336133+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:23.336261+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:29:23.336487+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:29:23.337097+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:29:23.343092+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:31:56.578131+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:31:56.612686+02:00] request.INFO: Matched route "get_one_meter". {"route":"get_one_meter","route_parameters":{"_route":"get_one_meter","_controller":"App\\Controller\\TestController::getMeter","id":"1"},"request_uri":"http://localhost:8000/getMeter/1","method":"GET"} []
[2022-08-02T20:31:56.613410+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:31:56.614370+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:31:56.616676+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:31:56.616914+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:31:56.617060+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:31:56.617094+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:31:56.617250+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:31:56.617304+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:31:56.617332+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:31:56.617394+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:31:56.617473+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:31:56.617602+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:31:56.618453+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:31:56.627339+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:32:51.367314+02:00] request.INFO: Matched route "delete_meter". {"route":"delete_meter","route_parameters":{"_route":"delete_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:32:51.368318+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:32:51.369236+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:32:51.372179+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:32:51.372569+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:32:51.372769+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:32:51.373008+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:32:51.373041+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:32:51.373172+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:32:51.373219+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:32:51.373241+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:32:51.373294+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:32:51.373365+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:32:51.373499+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:32:51.374541+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:32:51.385601+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:33:23.978056+02:00] request.INFO: Matched route "delete_meter". {"route":"delete_meter","route_parameters":{"_route":"delete_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:33:23.978583+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:33:23.979308+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:33:23.981456+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:33:23.981719+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:33:23.981929+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:33:23.982202+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:33:23.982240+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:33:23.982402+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:33:23.982461+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:33:23.982489+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:33:23.982572+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:33:23.982657+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:33:23.982809+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:33:23.983219+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:33:23.992361+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T20:35:30.107747+02:00] request.INFO: Matched route "delete_meter". {"route":"delete_meter","route_parameters":{"_route":"delete_meter","_controller":"App\\Controller\\TestController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T20:35:30.108232+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T20:35:30.109037+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T20:35:30.111643+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T20:35:30.111897+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:35:30.112092+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T20:35:30.112351+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:35:30.112392+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T20:35:30.112543+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:35:30.112601+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:35:30.112628+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T20:35:30.112694+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:35:30.112791+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T20:35:30.112920+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T20:35:30.113351+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T20:35:30.119297+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:34:44.593274+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\TestController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T22:34:44.593720+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:34:44.594790+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:34:44.596781+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:34:44.597110+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:34:44.597373+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:34:44.597854+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:34:44.597912+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:34:44.598153+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:34:44.598237+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:34:44.598268+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:34:44.598341+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:34:44.598438+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:34:44.598580+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:34:44.599028+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:34:44.604447+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:41:11.274184+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T22:41:11.274512+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:41:11.275062+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:41:11.279061+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:41:11.279435+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:11.279731+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:11.280108+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:11.280165+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:41:11.280397+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:11.280458+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:11.280484+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:41:11.280548+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:11.280630+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:11.280755+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:41:11.281448+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:11.289286+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:41:16.707876+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T22:41:16.708498+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:41:16.709577+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:41:16.712327+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:41:16.712625+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:16.712956+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:16.713394+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:16.713440+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:41:16.713832+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:16.713963+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:16.714002+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:41:16.714082+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:16.714265+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:16.714563+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:41:16.715052+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:16.721422+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:41:17.585471+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T22:41:17.586011+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:41:17.587737+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:41:17.589986+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:41:17.590266+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:17.590605+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:17.590865+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:17.590931+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:41:17.591164+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:17.591265+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:17.591313+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:41:17.591432+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:17.591592+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:17.591812+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:41:17.592323+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:17.598899+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:41:19.548556+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\TestController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T22:41:19.549186+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:41:19.550567+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:41:19.553277+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:41:19.553603+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:19.553950+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:41:19.554306+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:19.554352+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:41:19.554540+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:19.554609+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:19.554640+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:41:19.554716+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:19.554831+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:41:19.554977+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:41:19.555441+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:41:19.561361+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:52:45.289133+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:52:45.311886+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"61"},"request_uri":"http://127.0.0.1:8000/updateMeter/61","method":"PUT"} []
[2022-08-02T22:52:45.312471+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:52:45.313246+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:52:45.315835+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:52:45.316074+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:52:45.316218+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:52:45.316250+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:52:45.316396+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:52:45.316452+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:52:45.316475+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:52:45.316532+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:52:45.316604+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:52:45.316712+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:52:45.317471+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:52:45.325714+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:54:11.045414+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T22:54:11.046693+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:54:11.047784+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:54:11.050490+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:54:11.050869+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:54:11.051128+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:54:11.051401+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:54:11.051438+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:54:11.051599+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:54:11.051652+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:54:11.051676+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:54:11.051750+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:54:11.051831+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:54:11.051961+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:54:11.052388+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:54:11.059421+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T22:58:41.872718+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T22:58:41.873185+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T22:58:41.873898+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T22:58:41.876110+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T22:58:41.876383+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:58:41.876614+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T22:58:41.876976+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:58:41.877029+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T22:58:41.877245+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:58:41.877319+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:58:41.877352+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T22:58:41.877431+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:58:41.877538+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T22:58:41.877680+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T22:58:41.878188+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T22:58:41.884444+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:04:08.740581+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:04:08.741052+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:04:08.741763+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:04:08.743976+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:04:08.744235+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:04:08.744438+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:04:08.744693+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:08.744727+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:04:08.744872+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:08.744922+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:08.744946+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:04:08.745004+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:08.745085+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:08.745211+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:04:08.745644+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:08.753115+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:04:45.844818+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:04:45.845436+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:04:45.846419+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:04:45.848496+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:04:45.848722+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:04:45.848955+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:04:45.849189+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:45.849227+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:04:45.849377+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:45.849434+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:45.849460+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:04:45.849533+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:45.849612+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:04:45.849726+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:04:45.850143+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:04:45.854718+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:20:32.395093+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:20:32.395553+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:20:32.396248+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:20:32.398315+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:20:32.398567+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:20:32.398757+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:20:32.399004+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:20:32.399035+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:20:32.399178+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:20:32.399226+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:20:32.399248+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:20:32.399303+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:20:32.399377+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:20:32.399486+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:20:32.399874+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:20:32.405740+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:21:08.271031+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:21:08.271510+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:21:08.272143+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:21:08.272702+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "Amira"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 280 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"Amira\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:280)"} []
[2022-08-02T23:21:08.279342+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:21:08.279607+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:21:08.279789+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:21:08.280027+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:08.280058+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:21:08.280192+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:08.280244+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:08.280267+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:21:08.280321+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:08.280394+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:08.280500+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:21:08.280891+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:08.294743+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:21:47.655410+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:21:47.656057+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:21:47.656779+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:21:47.657271+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "Amira"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 280 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"Amira\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:280)"} []
[2022-08-02T23:21:47.662219+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:21:47.662415+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:21:47.662622+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:21:47.662836+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:47.662870+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:21:47.663012+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:47.663063+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:47.663087+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:21:47.663147+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:47.663222+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:21:47.663359+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:21:47.663785+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:21:47.673619+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:22:22.959626+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:22:22.960113+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:22:22.960699+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:22:22.961170+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "serial_number"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 281 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"serial_number\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:281)"} []
[2022-08-02T23:22:22.967309+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:22:22.967594+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:22.967780+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:22.968028+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:22.968060+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:22:22.968201+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:22.968256+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:22.968279+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:22:22.968334+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:22.968407+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:22.968515+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:22:22.968909+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:22.980538+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:22:38.537902+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:22:38.538731+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:22:38.540221+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:22:38.542941+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:22:38.543279+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:38.543674+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:38.544231+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:38.544310+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:22:38.544573+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:38.544659+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:38.544697+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:22:38.544795+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:38.544938+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:38.545138+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:22:38.545664+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:38.550752+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:22:57.497627+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:22:57.498136+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:22:57.499281+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:22:57.500616+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:22:57.500819+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:57.501011+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:22:57.501223+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:57.501257+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:22:57.501395+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:57.501448+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:57.501471+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:22:57.501530+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:57.501609+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:22:57.501726+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:22:57.502182+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:22:57.507753+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:23:59.022062+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:23:59.022497+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:24:26.617116+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:24:26.617602+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:24:26.618390+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Meter::class() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Meter::class() at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:271)"} []
[2022-08-02T23:24:26.618749+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:24:26.619224+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "class" of class "App\Entity\Meter"." at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 271 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"class\" of class \"App\\Entity\\Meter\". at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:271)"} []
[2022-08-02T23:24:26.624673+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:24:26.624918+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:24:26.625099+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:24:26.625334+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:24:26.625365+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:24:26.625501+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:24:26.625558+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:24:26.625581+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:24:26.625636+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:24:26.625708+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:24:26.625814+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:24:26.626242+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:24:26.638890+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:26:24.606102+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:26:24.606570+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:26:24.607232+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:26:24.609287+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:26:24.609535+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:26:24.609730+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:26:24.610014+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:24.610047+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:26:24.610336+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:24.610403+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:24.610428+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:26:24.610528+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:24.610642+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:24.610775+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:26:24.611285+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:24.616826+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:26:30.059871+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:26:30.060315+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:26:30.061029+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:26:30.061617+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "name"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 281 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"name\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:281)"} []
[2022-08-02T23:26:30.069213+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:26:30.069465+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:26:30.069687+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:26:30.069947+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:30.070005+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:26:30.070166+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:30.070221+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:30.070246+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:26:30.070307+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:30.070386+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:26:30.070524+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:26:30.070971+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:26:30.080744+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:29:00.793032+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:29:00.793538+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:29:00.794121+02:00] php.CRITICAL: Uncaught Error: Class "App\Controller\String" not found {"exception":"[object] (Error(code: 0): Class \"App\\Controller\\String\" not found at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:282)"} []
[2022-08-02T23:29:00.819186+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:29:00.819691+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "String" from namespace "App\Controller". Did you forget a "use" statement for another namespace?" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 282 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"String\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for another namespace? at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:282)"} []
[2022-08-02T23:29:00.825814+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:29:00.826046+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:29:00.826268+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:29:00.826559+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:29:00.826596+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:29:00.826799+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:29:00.826878+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:29:00.826905+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:29:00.826970+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:29:00.827061+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:29:00.827191+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:29:00.827619+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:29:00.841523+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:32:34.848044+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\TestController::updateMeter","id":"1"},"request_uri":"http://127.0.0.1:8000/updateMeter/1","method":"PUT"} []
[2022-08-02T23:32:34.848514+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:32:34.849093+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerOviqYva/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:32:34.849541+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key """ at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php line 284 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php:284)"} []
[2022-08-02T23:32:34.855323+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:32:34.855585+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:32:34.855768+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:32:34.856015+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:32:34.856047+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:32:34.856183+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:32:34.856231+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:32:34.856253+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:32:34.856309+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:32:34.856381+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:32:34.856491+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:32:34.856879+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:32:34.870929+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:43:45.458297+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/TestController.php {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/config/Resource/FileResource.php","line":62,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2022-08-02T23:43:45.489355+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:43:45.523389+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T23:43:45.524954+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:43:45.526936+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:43:45.539339+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:45.540576+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:45.544292+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.544348+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:43:45.545083+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.545269+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.545303+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:43:45.545365+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.545443+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.545707+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:43:45.547677+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.559588+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:43:45.571356+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\MeterController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T23:43:45.571838+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:43:45.572965+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:43:45.574971+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:43:45.575209+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:45.575398+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:45.575543+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.575575+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:43:45.575696+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.575748+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.575772+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:43:45.575829+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.575918+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:45.576030+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:43:45.576390+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:45.581974+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:43:52.201644+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\MeterController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T23:43:52.202627+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:43:52.203675+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:43:52.207339+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:43:52.207735+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:52.207952+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:43:52.208223+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:52.208258+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:43:52.208423+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:52.208476+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:52.208500+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:43:52.208560+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:52.208640+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:43:52.208765+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:43:52.209288+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:43:52.216882+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:44:07.245362+02:00] request.INFO: Matched route "delete_meter". {"route":"delete_meter","route_parameters":{"_route":"delete_meter","_controller":"App\\Controller\\MeterController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T23:44:07.245733+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:44:07.246759+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:44:07.248520+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:44:07.248759+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:07.249000+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:07.249251+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:07.249301+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:44:07.249467+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:07.249532+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:07.249564+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:44:07.249647+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:07.249751+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:07.249898+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:44:07.250431+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:07.256843+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:44:31.559102+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/getAllMeters/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"get_all_meter"},"request_uri":"http://localhost:8000/getAllMeters","method":"GET"} []
[2022-08-02T23:44:31.559425+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:44:31.560596+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:44:31.561755+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:44:31.562002+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:31.562206+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:31.562414+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.562449+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:44:31.562586+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.562639+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.562662+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:44:31.562721+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.562799+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.562918+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:44:31.563259+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.567664+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:44:31.579667+02:00] request.INFO: Matched route "get_all_meter". {"route":"get_all_meter","route_parameters":{"_route":"get_all_meter","_controller":"App\\Controller\\MeterController::getAllMeters"},"request_uri":"http://localhost:8000/getAllMeters/","method":"GET"} []
[2022-08-02T23:44:31.579875+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:44:31.580389+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:44:31.581347+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:44:31.581492+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:31.581666+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:44:31.581797+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.581826+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:44:31.581966+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.582019+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.582043+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:44:31.582112+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.582182+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:44:31.582308+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:44:31.582646+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:44:31.588546+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:45:17.340303+02:00] request.INFO: Matched route "delete_meter". {"route":"delete_meter","route_parameters":{"_route":"delete_meter","_controller":"App\\Controller\\MeterController::delete","id":"60"},"request_uri":"http://localhost:8000/deleteMeter/60","method":"DELETE"} []
[2022-08-02T23:45:17.341017+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:45:17.341758+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:45:17.344037+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:45:17.344274+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:45:17.344453+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:45:17.344688+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:17.344720+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:45:17.344853+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:17.344899+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:17.344927+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:45:17.344980+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:17.345049+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:17.345179+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:45:17.345634+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:17.352624+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:45:32.224980+02:00] request.INFO: Matched route "add_meter". {"route":"add_meter","route_parameters":{"_route":"add_meter","_controller":"App\\Controller\\MeterController::addMeter"},"request_uri":"http://127.0.0.1:8000/addMeter/","method":"POST"} []
[2022-08-02T23:45:32.225387+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:45:32.226123+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:45:32.227660+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:45:32.227835+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:45:32.228013+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:45:32.228207+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:32.228244+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:45:32.228369+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:32.228417+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:32.228438+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:45:32.228492+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:32.228564+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:45:32.228674+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:45:32.229009+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:45:32.234268+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:46:05.015863+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\MeterController::updateMeter","id":"61"},"request_uri":"http://127.0.0.1:8000/updateMeter/61","method":"PUT"} []
[2022-08-02T23:46:05.016266+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:46:05.017177+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:46:05.018548+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Undefined array key "name"" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/MeterController.php line 202 {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"name\" at /home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/src/Controller/MeterController.php:202)"} []
[2022-08-02T23:46:05.024948+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:46:05.025141+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:46:05.025323+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:46:05.025527+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:05.025560+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:46:05.025690+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:05.025738+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:05.025760+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:46:05.025815+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:05.025888+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:05.026019+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:46:05.026616+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:05.039460+02:00] doctrine.INFO: Disconnecting [] []
[2022-08-02T23:46:15.173311+02:00] request.INFO: Matched route "update_meter". {"route":"update_meter","route_parameters":{"_route":"update_meter","_controller":"App\\Controller\\MeterController::updateMeter","id":"61"},"request_uri":"http://127.0.0.1:8000/updateMeter/61","method":"PUT"} []
[2022-08-02T23:46:15.174104+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-08-02T23:46:15.175356+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/cache/dev/ContainerREGHRXh/App_KernelDevDebugContainer.php","line":1419,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-08-02T23:46:15.176771+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_sqlite","host":"localhost","port":null,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"path":"/home/amira/PhpstormProjects/Gateway_Api/gateway_IOT/var/data.db","charset":"utf8"}} []
[2022-08-02T23:46:15.176990+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:46:15.177216+02:00] doctrine.DEBUG: Executing query: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name {"sql":"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name"} []
[2022-08-02T23:46:15.177449+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:15.177485+02:00] doctrine.DEBUG: Executing query: PRAGMA table_info('doctrine_migration_versions') {"sql":"PRAGMA table_info('doctrine_migration_versions')"} []
[2022-08-02T23:46:15.177641+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:15.177700+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:15.177727+02:00] doctrine.DEBUG: Executing query: PRAGMA index_list('doctrine_migration_versions') {"sql":"PRAGMA index_list('doctrine_migration_versions')"} []
[2022-08-02T23:46:15.177793+02:00] doctrine.DEBUG: Executing statement: SELECT * FROM PRAGMA_TABLE_INFO (?) (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT * FROM PRAGMA_TABLE_INFO (?)","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:15.177880+02:00] doctrine.DEBUG: Executing statement: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? (parameters: array["doctrine_migration_versions"], types: array[]) {"sql":"SELECT sql\n  FROM (\n      SELECT *\n        FROM sqlite_master\n   UNION ALL\n      SELECT *\n        FROM sqlite_temp_master\n  )\nWHERE type = 'table'\nAND name = ?","params":["doctrine_migration_versions"],"types":[]} []
[2022-08-02T23:46:15.178029+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-08-02T23:46:15.178578+02:00] doctrine.DEBUG: Executing query: SELECT '' {"sql":"SELECT ''"} []
[2022-08-02T23:46:15.186458+02:00] doctrine.INFO: Disconnecting [] []
